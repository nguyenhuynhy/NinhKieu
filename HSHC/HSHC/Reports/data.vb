'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class NewDataSet
    Inherits DataSet
    
    Private tableDANHSACHHOSO As DANHSACHHOSODataTable
    
    Private tableDANHSACHHOSOTIEPNHAN As DANHSACHHOSOTIEPNHANDataTable
    
    Private tableDANHSACHHOSOCHUYEN As DANHSACHHOSOCHUYENDataTable
    
    Private tableINBIENNHANHOSO As INBIENNHANHOSODataTable
    
    Private tableINTHONGBAOBOSUNG As INTHONGBAOBOSUNGDataTable
    
    Private tableTHONGKELV_LHS As THONGKELV_LHSDataTable
    
    Private tableCTGIAIQUYETHOSO As CTGIAIQUYETHOSODataTable
    
    Private tableDANHSACHHOSOCHUNG As DANHSACHHOSOCHUNGDataTable
    
    Private tableTHONGKETON As THONGKETONDataTable
    
    Private tableINPHIEUCHUYEN As INPHIEUCHUYENDataTable
    
    Private tableTHQTTHULY As THQTTHULYDataTable
    
    Private tableCTQTTLQUAHAN As CTQTTLQUAHANDataTable
    
    Private tableTHONGKEBAOCAOPHUONGXA As THONGKEBAOCAOPHUONGXADataTable
    
    Private tableBAOCAOTHANG As BAOCAOTHANGDataTable
    
    Private tableHOSOKHONG As HOSOKHONGDataTable
    
    Private tableHOSOGIAIQUYET As HOSOGIAIQUYETDataTable
    
    Private tableBAOCAOTINHHINHGIAIQUYETHOSO As BAOCAOTINHHINHGIAIQUYETHOSODataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DANHSACHHOSO")) Is Nothing) Then
                Me.Tables.Add(New DANHSACHHOSODataTable(ds.Tables("DANHSACHHOSO")))
            End If
            If (Not (ds.Tables("DANHSACHHOSOTIEPNHAN")) Is Nothing) Then
                Me.Tables.Add(New DANHSACHHOSOTIEPNHANDataTable(ds.Tables("DANHSACHHOSOTIEPNHAN")))
            End If
            If (Not (ds.Tables("DANHSACHHOSOCHUYEN")) Is Nothing) Then
                Me.Tables.Add(New DANHSACHHOSOCHUYENDataTable(ds.Tables("DANHSACHHOSOCHUYEN")))
            End If
            If (Not (ds.Tables("INBIENNHANHOSO")) Is Nothing) Then
                Me.Tables.Add(New INBIENNHANHOSODataTable(ds.Tables("INBIENNHANHOSO")))
            End If
            If (Not (ds.Tables("INTHONGBAOBOSUNG")) Is Nothing) Then
                Me.Tables.Add(New INTHONGBAOBOSUNGDataTable(ds.Tables("INTHONGBAOBOSUNG")))
            End If
            If (Not (ds.Tables("THONGKELV_LHS")) Is Nothing) Then
                Me.Tables.Add(New THONGKELV_LHSDataTable(ds.Tables("THONGKELV_LHS")))
            End If
            If (Not (ds.Tables("CTGIAIQUYETHOSO")) Is Nothing) Then
                Me.Tables.Add(New CTGIAIQUYETHOSODataTable(ds.Tables("CTGIAIQUYETHOSO")))
            End If
            If (Not (ds.Tables("DANHSACHHOSOCHUNG")) Is Nothing) Then
                Me.Tables.Add(New DANHSACHHOSOCHUNGDataTable(ds.Tables("DANHSACHHOSOCHUNG")))
            End If
            If (Not (ds.Tables("THONGKETON")) Is Nothing) Then
                Me.Tables.Add(New THONGKETONDataTable(ds.Tables("THONGKETON")))
            End If
            If (Not (ds.Tables("INPHIEUCHUYEN")) Is Nothing) Then
                Me.Tables.Add(New INPHIEUCHUYENDataTable(ds.Tables("INPHIEUCHUYEN")))
            End If
            If (Not (ds.Tables("THQTTHULY")) Is Nothing) Then
                Me.Tables.Add(New THQTTHULYDataTable(ds.Tables("THQTTHULY")))
            End If
            If (Not (ds.Tables("CTQTTLQUAHAN")) Is Nothing) Then
                Me.Tables.Add(New CTQTTLQUAHANDataTable(ds.Tables("CTQTTLQUAHAN")))
            End If
            If (Not (ds.Tables("THONGKEBAOCAOPHUONGXA")) Is Nothing) Then
                Me.Tables.Add(New THONGKEBAOCAOPHUONGXADataTable(ds.Tables("THONGKEBAOCAOPHUONGXA")))
            End If
            If (Not (ds.Tables("BAOCAOTHANG")) Is Nothing) Then
                Me.Tables.Add(New BAOCAOTHANGDataTable(ds.Tables("BAOCAOTHANG")))
            End If
            If (Not (ds.Tables("HOSOKHONG")) Is Nothing) Then
                Me.Tables.Add(New HOSOKHONGDataTable(ds.Tables("HOSOKHONG")))
            End If
            If (Not (ds.Tables("HOSOGIAIQUYET")) Is Nothing) Then
                Me.Tables.Add(New HOSOGIAIQUYETDataTable(ds.Tables("HOSOGIAIQUYET")))
            End If
            If (Not (ds.Tables("BAOCAOTINHHINHGIAIQUYETHOSO")) Is Nothing) Then
                Me.Tables.Add(New BAOCAOTINHHINHGIAIQUYETHOSODataTable(ds.Tables("BAOCAOTINHHINHGIAIQUYETHOSO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DANHSACHHOSO As DANHSACHHOSODataTable
        Get
            Return Me.tableDANHSACHHOSO
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DANHSACHHOSOTIEPNHAN As DANHSACHHOSOTIEPNHANDataTable
        Get
            Return Me.tableDANHSACHHOSOTIEPNHAN
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DANHSACHHOSOCHUYEN As DANHSACHHOSOCHUYENDataTable
        Get
            Return Me.tableDANHSACHHOSOCHUYEN
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INBIENNHANHOSO As INBIENNHANHOSODataTable
        Get
            Return Me.tableINBIENNHANHOSO
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INTHONGBAOBOSUNG As INTHONGBAOBOSUNGDataTable
        Get
            Return Me.tableINTHONGBAOBOSUNG
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property THONGKELV_LHS As THONGKELV_LHSDataTable
        Get
            Return Me.tableTHONGKELV_LHS
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CTGIAIQUYETHOSO As CTGIAIQUYETHOSODataTable
        Get
            Return Me.tableCTGIAIQUYETHOSO
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DANHSACHHOSOCHUNG As DANHSACHHOSOCHUNGDataTable
        Get
            Return Me.tableDANHSACHHOSOCHUNG
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property THONGKETON As THONGKETONDataTable
        Get
            Return Me.tableTHONGKETON
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property INPHIEUCHUYEN As INPHIEUCHUYENDataTable
        Get
            Return Me.tableINPHIEUCHUYEN
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property THQTTHULY As THQTTHULYDataTable
        Get
            Return Me.tableTHQTTHULY
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CTQTTLQUAHAN As CTQTTLQUAHANDataTable
        Get
            Return Me.tableCTQTTLQUAHAN
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property THONGKEBAOCAOPHUONGXA As THONGKEBAOCAOPHUONGXADataTable
        Get
            Return Me.tableTHONGKEBAOCAOPHUONGXA
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BAOCAOTHANG As BAOCAOTHANGDataTable
        Get
            Return Me.tableBAOCAOTHANG
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HOSOKHONG As HOSOKHONGDataTable
        Get
            Return Me.tableHOSOKHONG
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property HOSOGIAIQUYET As HOSOGIAIQUYETDataTable
        Get
            Return Me.tableHOSOGIAIQUYET
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BAOCAOTINHHINHGIAIQUYETHOSO As BAOCAOTINHHINHGIAIQUYETHOSODataTable
        Get
            Return Me.tableBAOCAOTINHHINHGIAIQUYETHOSO
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As NewDataSet = CType(MyBase.Clone,NewDataSet)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("DANHSACHHOSO")) Is Nothing) Then
            Me.Tables.Add(New DANHSACHHOSODataTable(ds.Tables("DANHSACHHOSO")))
        End If
        If (Not (ds.Tables("DANHSACHHOSOTIEPNHAN")) Is Nothing) Then
            Me.Tables.Add(New DANHSACHHOSOTIEPNHANDataTable(ds.Tables("DANHSACHHOSOTIEPNHAN")))
        End If
        If (Not (ds.Tables("DANHSACHHOSOCHUYEN")) Is Nothing) Then
            Me.Tables.Add(New DANHSACHHOSOCHUYENDataTable(ds.Tables("DANHSACHHOSOCHUYEN")))
        End If
        If (Not (ds.Tables("INBIENNHANHOSO")) Is Nothing) Then
            Me.Tables.Add(New INBIENNHANHOSODataTable(ds.Tables("INBIENNHANHOSO")))
        End If
        If (Not (ds.Tables("INTHONGBAOBOSUNG")) Is Nothing) Then
            Me.Tables.Add(New INTHONGBAOBOSUNGDataTable(ds.Tables("INTHONGBAOBOSUNG")))
        End If
        If (Not (ds.Tables("THONGKELV_LHS")) Is Nothing) Then
            Me.Tables.Add(New THONGKELV_LHSDataTable(ds.Tables("THONGKELV_LHS")))
        End If
        If (Not (ds.Tables("CTGIAIQUYETHOSO")) Is Nothing) Then
            Me.Tables.Add(New CTGIAIQUYETHOSODataTable(ds.Tables("CTGIAIQUYETHOSO")))
        End If
        If (Not (ds.Tables("DANHSACHHOSOCHUNG")) Is Nothing) Then
            Me.Tables.Add(New DANHSACHHOSOCHUNGDataTable(ds.Tables("DANHSACHHOSOCHUNG")))
        End If
        If (Not (ds.Tables("THONGKETON")) Is Nothing) Then
            Me.Tables.Add(New THONGKETONDataTable(ds.Tables("THONGKETON")))
        End If
        If (Not (ds.Tables("INPHIEUCHUYEN")) Is Nothing) Then
            Me.Tables.Add(New INPHIEUCHUYENDataTable(ds.Tables("INPHIEUCHUYEN")))
        End If
        If (Not (ds.Tables("THQTTHULY")) Is Nothing) Then
            Me.Tables.Add(New THQTTHULYDataTable(ds.Tables("THQTTHULY")))
        End If
        If (Not (ds.Tables("CTQTTLQUAHAN")) Is Nothing) Then
            Me.Tables.Add(New CTQTTLQUAHANDataTable(ds.Tables("CTQTTLQUAHAN")))
        End If
        If (Not (ds.Tables("THONGKEBAOCAOPHUONGXA")) Is Nothing) Then
            Me.Tables.Add(New THONGKEBAOCAOPHUONGXADataTable(ds.Tables("THONGKEBAOCAOPHUONGXA")))
        End If
        If (Not (ds.Tables("BAOCAOTHANG")) Is Nothing) Then
            Me.Tables.Add(New BAOCAOTHANGDataTable(ds.Tables("BAOCAOTHANG")))
        End If
        If (Not (ds.Tables("HOSOKHONG")) Is Nothing) Then
            Me.Tables.Add(New HOSOKHONGDataTable(ds.Tables("HOSOKHONG")))
        End If
        If (Not (ds.Tables("HOSOGIAIQUYET")) Is Nothing) Then
            Me.Tables.Add(New HOSOGIAIQUYETDataTable(ds.Tables("HOSOGIAIQUYET")))
        End If
        If (Not (ds.Tables("BAOCAOTINHHINHGIAIQUYETHOSO")) Is Nothing) Then
            Me.Tables.Add(New BAOCAOTINHHINHGIAIQUYETHOSODataTable(ds.Tables("BAOCAOTINHHINHGIAIQUYETHOSO")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tableDANHSACHHOSO = CType(Me.Tables("DANHSACHHOSO"),DANHSACHHOSODataTable)
        If (Not (Me.tableDANHSACHHOSO) Is Nothing) Then
            Me.tableDANHSACHHOSO.InitVars
        End If
        Me.tableDANHSACHHOSOTIEPNHAN = CType(Me.Tables("DANHSACHHOSOTIEPNHAN"),DANHSACHHOSOTIEPNHANDataTable)
        If (Not (Me.tableDANHSACHHOSOTIEPNHAN) Is Nothing) Then
            Me.tableDANHSACHHOSOTIEPNHAN.InitVars
        End If
        Me.tableDANHSACHHOSOCHUYEN = CType(Me.Tables("DANHSACHHOSOCHUYEN"),DANHSACHHOSOCHUYENDataTable)
        If (Not (Me.tableDANHSACHHOSOCHUYEN) Is Nothing) Then
            Me.tableDANHSACHHOSOCHUYEN.InitVars
        End If
        Me.tableINBIENNHANHOSO = CType(Me.Tables("INBIENNHANHOSO"),INBIENNHANHOSODataTable)
        If (Not (Me.tableINBIENNHANHOSO) Is Nothing) Then
            Me.tableINBIENNHANHOSO.InitVars
        End If
        Me.tableINTHONGBAOBOSUNG = CType(Me.Tables("INTHONGBAOBOSUNG"),INTHONGBAOBOSUNGDataTable)
        If (Not (Me.tableINTHONGBAOBOSUNG) Is Nothing) Then
            Me.tableINTHONGBAOBOSUNG.InitVars
        End If
        Me.tableTHONGKELV_LHS = CType(Me.Tables("THONGKELV_LHS"),THONGKELV_LHSDataTable)
        If (Not (Me.tableTHONGKELV_LHS) Is Nothing) Then
            Me.tableTHONGKELV_LHS.InitVars
        End If
        Me.tableCTGIAIQUYETHOSO = CType(Me.Tables("CTGIAIQUYETHOSO"),CTGIAIQUYETHOSODataTable)
        If (Not (Me.tableCTGIAIQUYETHOSO) Is Nothing) Then
            Me.tableCTGIAIQUYETHOSO.InitVars
        End If
        Me.tableDANHSACHHOSOCHUNG = CType(Me.Tables("DANHSACHHOSOCHUNG"),DANHSACHHOSOCHUNGDataTable)
        If (Not (Me.tableDANHSACHHOSOCHUNG) Is Nothing) Then
            Me.tableDANHSACHHOSOCHUNG.InitVars
        End If
        Me.tableTHONGKETON = CType(Me.Tables("THONGKETON"),THONGKETONDataTable)
        If (Not (Me.tableTHONGKETON) Is Nothing) Then
            Me.tableTHONGKETON.InitVars
        End If
        Me.tableINPHIEUCHUYEN = CType(Me.Tables("INPHIEUCHUYEN"),INPHIEUCHUYENDataTable)
        If (Not (Me.tableINPHIEUCHUYEN) Is Nothing) Then
            Me.tableINPHIEUCHUYEN.InitVars
        End If
        Me.tableTHQTTHULY = CType(Me.Tables("THQTTHULY"),THQTTHULYDataTable)
        If (Not (Me.tableTHQTTHULY) Is Nothing) Then
            Me.tableTHQTTHULY.InitVars
        End If
        Me.tableCTQTTLQUAHAN = CType(Me.Tables("CTQTTLQUAHAN"),CTQTTLQUAHANDataTable)
        If (Not (Me.tableCTQTTLQUAHAN) Is Nothing) Then
            Me.tableCTQTTLQUAHAN.InitVars
        End If
        Me.tableTHONGKEBAOCAOPHUONGXA = CType(Me.Tables("THONGKEBAOCAOPHUONGXA"),THONGKEBAOCAOPHUONGXADataTable)
        If (Not (Me.tableTHONGKEBAOCAOPHUONGXA) Is Nothing) Then
            Me.tableTHONGKEBAOCAOPHUONGXA.InitVars
        End If
        Me.tableBAOCAOTHANG = CType(Me.Tables("BAOCAOTHANG"),BAOCAOTHANGDataTable)
        If (Not (Me.tableBAOCAOTHANG) Is Nothing) Then
            Me.tableBAOCAOTHANG.InitVars
        End If
        Me.tableHOSOKHONG = CType(Me.Tables("HOSOKHONG"),HOSOKHONGDataTable)
        If (Not (Me.tableHOSOKHONG) Is Nothing) Then
            Me.tableHOSOKHONG.InitVars
        End If
        Me.tableHOSOGIAIQUYET = CType(Me.Tables("HOSOGIAIQUYET"),HOSOGIAIQUYETDataTable)
        If (Not (Me.tableHOSOGIAIQUYET) Is Nothing) Then
            Me.tableHOSOGIAIQUYET.InitVars
        End If
        Me.tableBAOCAOTINHHINHGIAIQUYETHOSO = CType(Me.Tables("BAOCAOTINHHINHGIAIQUYETHOSO"),BAOCAOTINHHINHGIAIQUYETHOSODataTable)
        If (Not (Me.tableBAOCAOTINHHINHGIAIQUYETHOSO) Is Nothing) Then
            Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "NewDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/XMLSchema.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tableDANHSACHHOSO = New DANHSACHHOSODataTable
        Me.Tables.Add(Me.tableDANHSACHHOSO)
        Me.tableDANHSACHHOSOTIEPNHAN = New DANHSACHHOSOTIEPNHANDataTable
        Me.Tables.Add(Me.tableDANHSACHHOSOTIEPNHAN)
        Me.tableDANHSACHHOSOCHUYEN = New DANHSACHHOSOCHUYENDataTable
        Me.Tables.Add(Me.tableDANHSACHHOSOCHUYEN)
        Me.tableINBIENNHANHOSO = New INBIENNHANHOSODataTable
        Me.Tables.Add(Me.tableINBIENNHANHOSO)
        Me.tableINTHONGBAOBOSUNG = New INTHONGBAOBOSUNGDataTable
        Me.Tables.Add(Me.tableINTHONGBAOBOSUNG)
        Me.tableTHONGKELV_LHS = New THONGKELV_LHSDataTable
        Me.Tables.Add(Me.tableTHONGKELV_LHS)
        Me.tableCTGIAIQUYETHOSO = New CTGIAIQUYETHOSODataTable
        Me.Tables.Add(Me.tableCTGIAIQUYETHOSO)
        Me.tableDANHSACHHOSOCHUNG = New DANHSACHHOSOCHUNGDataTable
        Me.Tables.Add(Me.tableDANHSACHHOSOCHUNG)
        Me.tableTHONGKETON = New THONGKETONDataTable
        Me.Tables.Add(Me.tableTHONGKETON)
        Me.tableINPHIEUCHUYEN = New INPHIEUCHUYENDataTable
        Me.Tables.Add(Me.tableINPHIEUCHUYEN)
        Me.tableTHQTTHULY = New THQTTHULYDataTable
        Me.Tables.Add(Me.tableTHQTTHULY)
        Me.tableCTQTTLQUAHAN = New CTQTTLQUAHANDataTable
        Me.Tables.Add(Me.tableCTQTTLQUAHAN)
        Me.tableTHONGKEBAOCAOPHUONGXA = New THONGKEBAOCAOPHUONGXADataTable
        Me.Tables.Add(Me.tableTHONGKEBAOCAOPHUONGXA)
        Me.tableBAOCAOTHANG = New BAOCAOTHANGDataTable
        Me.Tables.Add(Me.tableBAOCAOTHANG)
        Me.tableHOSOKHONG = New HOSOKHONGDataTable
        Me.Tables.Add(Me.tableHOSOKHONG)
        Me.tableHOSOGIAIQUYET = New HOSOGIAIQUYETDataTable
        Me.Tables.Add(Me.tableHOSOGIAIQUYET)
        Me.tableBAOCAOTINHHINHGIAIQUYETHOSO = New BAOCAOTINHHINHGIAIQUYETHOSODataTable
        Me.Tables.Add(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO)
    End Sub
    
    Private Function ShouldSerializeDANHSACHHOSO() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeDANHSACHHOSOTIEPNHAN() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeDANHSACHHOSOCHUYEN() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeINBIENNHANHOSO() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeINTHONGBAOBOSUNG() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeTHONGKELV_LHS() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeCTGIAIQUYETHOSO() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeDANHSACHHOSOCHUNG() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeTHONGKETON() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeINPHIEUCHUYEN() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeTHQTTHULY() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeCTQTTLQUAHAN() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeTHONGKEBAOCAOPHUONGXA() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeBAOCAOTHANG() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeHOSOKHONG() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeHOSOGIAIQUYET() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeBAOCAOTINHHINHGIAIQUYETHOSO() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub DANHSACHHOSORowChangeEventHandler(ByVal sender As Object, ByVal e As DANHSACHHOSORowChangeEvent)
    
    Public Delegate Sub DANHSACHHOSOTIEPNHANRowChangeEventHandler(ByVal sender As Object, ByVal e As DANHSACHHOSOTIEPNHANRowChangeEvent)
    
    Public Delegate Sub DANHSACHHOSOCHUYENRowChangeEventHandler(ByVal sender As Object, ByVal e As DANHSACHHOSOCHUYENRowChangeEvent)
    
    Public Delegate Sub INBIENNHANHOSORowChangeEventHandler(ByVal sender As Object, ByVal e As INBIENNHANHOSORowChangeEvent)
    
    Public Delegate Sub INTHONGBAOBOSUNGRowChangeEventHandler(ByVal sender As Object, ByVal e As INTHONGBAOBOSUNGRowChangeEvent)
    
    Public Delegate Sub THONGKELV_LHSRowChangeEventHandler(ByVal sender As Object, ByVal e As THONGKELV_LHSRowChangeEvent)
    
    Public Delegate Sub CTGIAIQUYETHOSORowChangeEventHandler(ByVal sender As Object, ByVal e As CTGIAIQUYETHOSORowChangeEvent)
    
    Public Delegate Sub DANHSACHHOSOCHUNGRowChangeEventHandler(ByVal sender As Object, ByVal e As DANHSACHHOSOCHUNGRowChangeEvent)
    
    Public Delegate Sub THONGKETONRowChangeEventHandler(ByVal sender As Object, ByVal e As THONGKETONRowChangeEvent)
    
    Public Delegate Sub INPHIEUCHUYENRowChangeEventHandler(ByVal sender As Object, ByVal e As INPHIEUCHUYENRowChangeEvent)
    
    Public Delegate Sub THQTTHULYRowChangeEventHandler(ByVal sender As Object, ByVal e As THQTTHULYRowChangeEvent)
    
    Public Delegate Sub CTQTTLQUAHANRowChangeEventHandler(ByVal sender As Object, ByVal e As CTQTTLQUAHANRowChangeEvent)
    
    Public Delegate Sub THONGKEBAOCAOPHUONGXARowChangeEventHandler(ByVal sender As Object, ByVal e As THONGKEBAOCAOPHUONGXARowChangeEvent)
    
    Public Delegate Sub BAOCAOTHANGRowChangeEventHandler(ByVal sender As Object, ByVal e As BAOCAOTHANGRowChangeEvent)
    
    Public Delegate Sub HOSOKHONGRowChangeEventHandler(ByVal sender As Object, ByVal e As HOSOKHONGRowChangeEvent)
    
    Public Delegate Sub HOSOGIAIQUYETRowChangeEventHandler(ByVal sender As Object, ByVal e As HOSOGIAIQUYETRowChangeEvent)
    
    Public Delegate Sub BAOCAOTINHHINHGIAIQUYETHOSORowChangeEventHandler(ByVal sender As Object, ByVal e As BAOCAOTINHHINHGIAIQUYETHOSORowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSODataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnMATINHTRANG As DataColumn
        
        Private columnTENTINHTRANG As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Friend Sub New()
            MyBase.New("DANHSACHHOSO")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property MATINHTRANGColumn As DataColumn
            Get
                Return Me.columnMATINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property TENTINHTRANGColumn As DataColumn
            Get
                Return Me.columnTENTINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As DANHSACHHOSORow
            Get
                Return CType(Me.Rows(index),DANHSACHHOSORow)
            End Get
        End Property
        
        Public Event DANHSACHHOSORowChanged As DANHSACHHOSORowChangeEventHandler
        
        Public Event DANHSACHHOSORowChanging As DANHSACHHOSORowChangeEventHandler
        
        Public Event DANHSACHHOSORowDeleted As DANHSACHHOSORowChangeEventHandler
        
        Public Event DANHSACHHOSORowDeleting As DANHSACHHOSORowChangeEventHandler
        
        Public Overloads Sub AddDANHSACHHOSORow(ByVal row As DANHSACHHOSORow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDANHSACHHOSORow(ByVal TINHTHANH As String, ByVal PHONGBAN As String, ByVal CONGTY As String, ByVal VANPHONG As String, ByVal TENLINHVUC As String, ByVal SOBIENNHAN As String, ByVal HOTEN As String, ByVal DIACHI As String, ByVal NGAYNHAN As String, ByVal NGAYHENTRA As String, ByVal LOAIHOSO As String, ByVal MATINHTRANG As String, ByVal TENTINHTRANG As String, ByVal GHICHU As String) As DANHSACHHOSORow
            Dim rowDANHSACHHOSORow As DANHSACHHOSORow = CType(Me.NewRow,DANHSACHHOSORow)
            rowDANHSACHHOSORow.ItemArray = New Object() {TINHTHANH, PHONGBAN, CONGTY, VANPHONG, TENLINHVUC, SOBIENNHAN, HOTEN, DIACHI, NGAYNHAN, NGAYHENTRA, LOAIHOSO, MATINHTRANG, TENTINHTRANG, GHICHU}
            Me.Rows.Add(rowDANHSACHHOSORow)
            Return rowDANHSACHHOSORow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As DANHSACHHOSODataTable = CType(MyBase.Clone,DANHSACHHOSODataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New DANHSACHHOSODataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnMATINHTRANG = Me.Columns("MATINHTRANG")
            Me.columnTENTINHTRANG = Me.Columns("TENTINHTRANG")
            Me.columnGHICHU = Me.Columns("GHICHU")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnMATINHTRANG = New DataColumn("MATINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMATINHTRANG)
            Me.columnTENTINHTRANG = New DataColumn("TENTINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENTINHTRANG)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnMATINHTRANG.AllowDBNull = false
            Me.columnTENTINHTRANG.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
        End Sub
        
        Public Function NewDANHSACHHOSORow() As DANHSACHHOSORow
            Return CType(Me.NewRow,DANHSACHHOSORow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New DANHSACHHOSORow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DANHSACHHOSORow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DANHSACHHOSORowChangedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSORowChanged(Me, New DANHSACHHOSORowChangeEvent(CType(e.Row,DANHSACHHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DANHSACHHOSORowChangingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSORowChanging(Me, New DANHSACHHOSORowChangeEvent(CType(e.Row,DANHSACHHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DANHSACHHOSORowDeletedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSORowDeleted(Me, New DANHSACHHOSORowChangeEvent(CType(e.Row,DANHSACHHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DANHSACHHOSORowDeletingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSORowDeleting(Me, New DANHSACHHOSORowChangeEvent(CType(e.Row,DANHSACHHOSORow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDANHSACHHOSORow(ByVal row As DANHSACHHOSORow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSORow
        Inherits DataRow
        
        Private tableDANHSACHHOSO As DANHSACHHOSODataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDANHSACHHOSO = CType(Me.Table,DANHSACHHOSODataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.HOTENColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property MATINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.MATINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.MATINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property TENTINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.TENTINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.TENTINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSO.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSO.GHICHUColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSORowChangeEvent
        Inherits EventArgs
        
        Private eventRow As DANHSACHHOSORow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As DANHSACHHOSORow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As DANHSACHHOSORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOTIEPNHANDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnMATINHTRANG As DataColumn
        
        Private columnTENTINHTRANG As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Friend Sub New()
            MyBase.New("DANHSACHHOSOTIEPNHAN")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property MATINHTRANGColumn As DataColumn
            Get
                Return Me.columnMATINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property TENTINHTRANGColumn As DataColumn
            Get
                Return Me.columnTENTINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As DANHSACHHOSOTIEPNHANRow
            Get
                Return CType(Me.Rows(index),DANHSACHHOSOTIEPNHANRow)
            End Get
        End Property
        
        Public Event DANHSACHHOSOTIEPNHANRowChanged As DANHSACHHOSOTIEPNHANRowChangeEventHandler
        
        Public Event DANHSACHHOSOTIEPNHANRowChanging As DANHSACHHOSOTIEPNHANRowChangeEventHandler
        
        Public Event DANHSACHHOSOTIEPNHANRowDeleted As DANHSACHHOSOTIEPNHANRowChangeEventHandler
        
        Public Event DANHSACHHOSOTIEPNHANRowDeleting As DANHSACHHOSOTIEPNHANRowChangeEventHandler
        
        Public Overloads Sub AddDANHSACHHOSOTIEPNHANRow(ByVal row As DANHSACHHOSOTIEPNHANRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDANHSACHHOSOTIEPNHANRow(ByVal LOAIHOSO As String, ByVal SOBIENNHAN As String, ByVal HOTEN As String, ByVal DIACHI As String, ByVal NGAYNHAN As String, ByVal NGAYHENTRA As String, ByVal MATINHTRANG As String, ByVal TENTINHTRANG As String, ByVal GHICHU As String) As DANHSACHHOSOTIEPNHANRow
            Dim rowDANHSACHHOSOTIEPNHANRow As DANHSACHHOSOTIEPNHANRow = CType(Me.NewRow,DANHSACHHOSOTIEPNHANRow)
            rowDANHSACHHOSOTIEPNHANRow.ItemArray = New Object() {LOAIHOSO, SOBIENNHAN, HOTEN, DIACHI, NGAYNHAN, NGAYHENTRA, MATINHTRANG, TENTINHTRANG, GHICHU}
            Me.Rows.Add(rowDANHSACHHOSOTIEPNHANRow)
            Return rowDANHSACHHOSOTIEPNHANRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As DANHSACHHOSOTIEPNHANDataTable = CType(MyBase.Clone,DANHSACHHOSOTIEPNHANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New DANHSACHHOSOTIEPNHANDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnMATINHTRANG = Me.Columns("MATINHTRANG")
            Me.columnTENTINHTRANG = Me.Columns("TENTINHTRANG")
            Me.columnGHICHU = Me.Columns("GHICHU")
        End Sub
        
        Private Sub InitClass()
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnMATINHTRANG = New DataColumn("MATINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMATINHTRANG)
            Me.columnTENTINHTRANG = New DataColumn("TENTINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENTINHTRANG)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnMATINHTRANG.AllowDBNull = false
            Me.columnTENTINHTRANG.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
        End Sub
        
        Public Function NewDANHSACHHOSOTIEPNHANRow() As DANHSACHHOSOTIEPNHANRow
            Return CType(Me.NewRow,DANHSACHHOSOTIEPNHANRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New DANHSACHHOSOTIEPNHANRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DANHSACHHOSOTIEPNHANRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DANHSACHHOSOTIEPNHANRowChangedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOTIEPNHANRowChanged(Me, New DANHSACHHOSOTIEPNHANRowChangeEvent(CType(e.Row,DANHSACHHOSOTIEPNHANRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DANHSACHHOSOTIEPNHANRowChangingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOTIEPNHANRowChanging(Me, New DANHSACHHOSOTIEPNHANRowChangeEvent(CType(e.Row,DANHSACHHOSOTIEPNHANRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DANHSACHHOSOTIEPNHANRowDeletedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOTIEPNHANRowDeleted(Me, New DANHSACHHOSOTIEPNHANRowChangeEvent(CType(e.Row,DANHSACHHOSOTIEPNHANRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DANHSACHHOSOTIEPNHANRowDeletingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOTIEPNHANRowDeleting(Me, New DANHSACHHOSOTIEPNHANRowChangeEvent(CType(e.Row,DANHSACHHOSOTIEPNHANRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDANHSACHHOSOTIEPNHANRow(ByVal row As DANHSACHHOSOTIEPNHANRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOTIEPNHANRow
        Inherits DataRow
        
        Private tableDANHSACHHOSOTIEPNHAN As DANHSACHHOSOTIEPNHANDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDANHSACHHOSOTIEPNHAN = CType(Me.Table,DANHSACHHOSOTIEPNHANDataTable)
        End Sub
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.HOTENColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property MATINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.MATINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.MATINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property TENTINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.TENTINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.TENTINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOTIEPNHAN.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOTIEPNHAN.GHICHUColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOTIEPNHANRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As DANHSACHHOSOTIEPNHANRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As DANHSACHHOSOTIEPNHANRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As DANHSACHHOSOTIEPNHANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOCHUYENDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnSOGIAYPHEP As DataColumn
        
        Private columnNGAYCAP As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnMATINHTRANG As DataColumn
        
        Private columnTENTINHTRANG As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Private columnPHUONG As DataColumn
        
        Friend Sub New()
            MyBase.New("DANHSACHHOSOCHUYEN")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property SOGIAYPHEPColumn As DataColumn
            Get
                Return Me.columnSOGIAYPHEP
            End Get
        End Property
        
        Friend ReadOnly Property NGAYCAPColumn As DataColumn
            Get
                Return Me.columnNGAYCAP
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property MATINHTRANGColumn As DataColumn
            Get
                Return Me.columnMATINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property TENTINHTRANGColumn As DataColumn
            Get
                Return Me.columnTENTINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Friend ReadOnly Property PHUONGColumn As DataColumn
            Get
                Return Me.columnPHUONG
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As DANHSACHHOSOCHUYENRow
            Get
                Return CType(Me.Rows(index),DANHSACHHOSOCHUYENRow)
            End Get
        End Property
        
        Public Event DANHSACHHOSOCHUYENRowChanged As DANHSACHHOSOCHUYENRowChangeEventHandler
        
        Public Event DANHSACHHOSOCHUYENRowChanging As DANHSACHHOSOCHUYENRowChangeEventHandler
        
        Public Event DANHSACHHOSOCHUYENRowDeleted As DANHSACHHOSOCHUYENRowChangeEventHandler
        
        Public Event DANHSACHHOSOCHUYENRowDeleting As DANHSACHHOSOCHUYENRowChangeEventHandler
        
        Public Overloads Sub AddDANHSACHHOSOCHUYENRow(ByVal row As DANHSACHHOSOCHUYENRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDANHSACHHOSOCHUYENRow( _
                    ByVal TINHTHANH As String,  _
                    ByVal CONGTY As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal TENLINHVUC As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal SOGIAYPHEP As String,  _
                    ByVal NGAYCAP As String,  _
                    ByVal HOTEN As String,  _
                    ByVal DIACHI As String,  _
                    ByVal NGAYNHAN As String,  _
                    ByVal NGAYHENTRA As String,  _
                    ByVal LOAIHOSO As String,  _
                    ByVal MATINHTRANG As String,  _
                    ByVal TENTINHTRANG As String,  _
                    ByVal GHICHU As String,  _
                    ByVal PHUONG As String) As DANHSACHHOSOCHUYENRow
            Dim rowDANHSACHHOSOCHUYENRow As DANHSACHHOSOCHUYENRow = CType(Me.NewRow,DANHSACHHOSOCHUYENRow)
            rowDANHSACHHOSOCHUYENRow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, TENLINHVUC, SOBIENNHAN, SOGIAYPHEP, NGAYCAP, HOTEN, DIACHI, NGAYNHAN, NGAYHENTRA, LOAIHOSO, MATINHTRANG, TENTINHTRANG, GHICHU, PHUONG}
            Me.Rows.Add(rowDANHSACHHOSOCHUYENRow)
            Return rowDANHSACHHOSOCHUYENRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As DANHSACHHOSOCHUYENDataTable = CType(MyBase.Clone,DANHSACHHOSOCHUYENDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New DANHSACHHOSOCHUYENDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnSOGIAYPHEP = Me.Columns("SOGIAYPHEP")
            Me.columnNGAYCAP = Me.Columns("NGAYCAP")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnMATINHTRANG = Me.Columns("MATINHTRANG")
            Me.columnTENTINHTRANG = Me.Columns("TENTINHTRANG")
            Me.columnGHICHU = Me.Columns("GHICHU")
            Me.columnPHUONG = Me.Columns("PHUONG")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnSOGIAYPHEP = New DataColumn("SOGIAYPHEP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOGIAYPHEP)
            Me.columnNGAYCAP = New DataColumn("NGAYCAP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYCAP)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnMATINHTRANG = New DataColumn("MATINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMATINHTRANG)
            Me.columnTENTINHTRANG = New DataColumn("TENTINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENTINHTRANG)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnPHUONG = New DataColumn("PHUONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHUONG)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnSOGIAYPHEP.AllowDBNull = false
            Me.columnNGAYCAP.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnMATINHTRANG.AllowDBNull = false
            Me.columnTENTINHTRANG.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
            Me.columnPHUONG.AllowDBNull = false
        End Sub
        
        Public Function NewDANHSACHHOSOCHUYENRow() As DANHSACHHOSOCHUYENRow
            Return CType(Me.NewRow,DANHSACHHOSOCHUYENRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New DANHSACHHOSOCHUYENRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DANHSACHHOSOCHUYENRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DANHSACHHOSOCHUYENRowChangedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUYENRowChanged(Me, New DANHSACHHOSOCHUYENRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUYENRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DANHSACHHOSOCHUYENRowChangingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUYENRowChanging(Me, New DANHSACHHOSOCHUYENRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUYENRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DANHSACHHOSOCHUYENRowDeletedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUYENRowDeleted(Me, New DANHSACHHOSOCHUYENRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUYENRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DANHSACHHOSOCHUYENRowDeletingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUYENRowDeleting(Me, New DANHSACHHOSOCHUYENRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUYENRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDANHSACHHOSOCHUYENRow(ByVal row As DANHSACHHOSOCHUYENRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOCHUYENRow
        Inherits DataRow
        
        Private tableDANHSACHHOSOCHUYEN As DANHSACHHOSOCHUYENDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDANHSACHHOSOCHUYEN = CType(Me.Table,DANHSACHHOSOCHUYENDataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property SOGIAYPHEP As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.SOGIAYPHEPColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.SOGIAYPHEPColumn) = value
            End Set
        End Property
        
        Public Property NGAYCAP As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.NGAYCAPColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.NGAYCAPColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.HOTENColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property MATINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.MATINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.MATINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property TENTINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.TENTINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.TENTINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.GHICHUColumn) = value
            End Set
        End Property
        
        Public Property PHUONG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUYEN.PHUONGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUYEN.PHUONGColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOCHUYENRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As DANHSACHHOSOCHUYENRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As DANHSACHHOSOCHUYENRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As DANHSACHHOSOCHUYENRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INBIENNHANHOSODataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnUBND As DataColumn
        
        Private columnQUANHUYEN As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnLINHVUC As DataColumn
        
        Private columnNGAY As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnGIOITINH As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnNGAYTHUCDIA As DataColumn
        
        Private columnDIACHITHUONGTRU As DataColumn
        
        Private columnSOCMND As DataColumn
        
        Private columnThongTinLienLac As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnMALOAIHOSO As DataColumn
        
        Private columnTENLOAIHOSO As DataColumn
        
        Private columnTENHOSOKEMTHEO As DataColumn
        
        Private columnSOBANCHINH As DataColumn
        
        Private columnSOBANSAO As DataColumn
        
        Private columnSOPHOTO As DataColumn
        
        Private columnNGUOINHAN As DataColumn
        
        Private columnNOIDUNGKHAC As DataColumn
        
        Private columnNOIDUNGHOSO As DataColumn
        
        Private columnChuoiTraCuu As DataColumn
        
        Private columnChuoiTraCuu1 As DataColumn
        
        Private columnChuoiTraCuu2 As DataColumn
        
        Private columnChuoiTraCuu3 As DataColumn
        
        Private columnNGAYTHONGBAO As DataColumn
        
        Private columnNgayDoDac As DataColumn
        
        Private columnNgayNopBienBan As DataColumn
        
        Private columnNgayNhanThongBaoThue As DataColumn
        
        Friend Sub New()
            MyBase.New("INBIENNHANHOSO")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property UBNDColumn As DataColumn
            Get
                Return Me.columnUBND
            End Get
        End Property
        
        Friend ReadOnly Property QUANHUYENColumn As DataColumn
            Get
                Return Me.columnQUANHUYEN
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property LINHVUCColumn As DataColumn
            Get
                Return Me.columnLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property NGAYColumn As DataColumn
            Get
                Return Me.columnNGAY
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property GIOITINHColumn As DataColumn
            Get
                Return Me.columnGIOITINH
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property NGAYTHUCDIAColumn As DataColumn
            Get
                Return Me.columnNGAYTHUCDIA
            End Get
        End Property
        
        Friend ReadOnly Property DIACHITHUONGTRUColumn As DataColumn
            Get
                Return Me.columnDIACHITHUONGTRU
            End Get
        End Property
        
        Friend ReadOnly Property SOCMNDColumn As DataColumn
            Get
                Return Me.columnSOCMND
            End Get
        End Property
        
        Friend ReadOnly Property ThongTinLienLacColumn As DataColumn
            Get
                Return Me.columnThongTinLienLac
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property MALOAIHOSOColumn As DataColumn
            Get
                Return Me.columnMALOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property TENLOAIHOSOColumn As DataColumn
            Get
                Return Me.columnTENLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property TENHOSOKEMTHEOColumn As DataColumn
            Get
                Return Me.columnTENHOSOKEMTHEO
            End Get
        End Property
        
        Friend ReadOnly Property SOBANCHINHColumn As DataColumn
            Get
                Return Me.columnSOBANCHINH
            End Get
        End Property
        
        Friend ReadOnly Property SOBANSAOColumn As DataColumn
            Get
                Return Me.columnSOBANSAO
            End Get
        End Property
        
        Friend ReadOnly Property SOPHOTOColumn As DataColumn
            Get
                Return Me.columnSOPHOTO
            End Get
        End Property
        
        Friend ReadOnly Property NGUOINHANColumn As DataColumn
            Get
                Return Me.columnNGUOINHAN
            End Get
        End Property
        
        Friend ReadOnly Property NOIDUNGKHACColumn As DataColumn
            Get
                Return Me.columnNOIDUNGKHAC
            End Get
        End Property
        
        Friend ReadOnly Property NOIDUNGHOSOColumn As DataColumn
            Get
                Return Me.columnNOIDUNGHOSO
            End Get
        End Property
        
        Friend ReadOnly Property ChuoiTraCuuColumn As DataColumn
            Get
                Return Me.columnChuoiTraCuu
            End Get
        End Property
        
        Friend ReadOnly Property ChuoiTraCuu1Column As DataColumn
            Get
                Return Me.columnChuoiTraCuu1
            End Get
        End Property
        
        Friend ReadOnly Property ChuoiTraCuu2Column As DataColumn
            Get
                Return Me.columnChuoiTraCuu2
            End Get
        End Property
        
        Friend ReadOnly Property ChuoiTraCuu3Column As DataColumn
            Get
                Return Me.columnChuoiTraCuu3
            End Get
        End Property
        
        Friend ReadOnly Property NGAYTHONGBAOColumn As DataColumn
            Get
                Return Me.columnNGAYTHONGBAO
            End Get
        End Property
        
        Friend ReadOnly Property NgayDoDacColumn As DataColumn
            Get
                Return Me.columnNgayDoDac
            End Get
        End Property
        
        Friend ReadOnly Property NgayNopBienBanColumn As DataColumn
            Get
                Return Me.columnNgayNopBienBan
            End Get
        End Property
        
        Friend ReadOnly Property NgayNhanThongBaoThueColumn As DataColumn
            Get
                Return Me.columnNgayNhanThongBaoThue
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As INBIENNHANHOSORow
            Get
                Return CType(Me.Rows(index),INBIENNHANHOSORow)
            End Get
        End Property
        
        Public Event INBIENNHANHOSORowChanged As INBIENNHANHOSORowChangeEventHandler
        
        Public Event INBIENNHANHOSORowChanging As INBIENNHANHOSORowChangeEventHandler
        
        Public Event INBIENNHANHOSORowDeleted As INBIENNHANHOSORowChangeEventHandler
        
        Public Event INBIENNHANHOSORowDeleting As INBIENNHANHOSORowChangeEventHandler
        
        Public Overloads Sub AddINBIENNHANHOSORow(ByVal row As INBIENNHANHOSORow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddINBIENNHANHOSORow( _
                    ByVal TINHTHANH As String,  _
                    ByVal UBND As String,  _
                    ByVal QUANHUYEN As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal LINHVUC As String,  _
                    ByVal NGAY As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal GIOITINH As String,  _
                    ByVal HOTEN As String,  _
                    ByVal NGAYHENTRA As String,  _
                    ByVal NGAYTHUCDIA As String,  _
                    ByVal DIACHITHUONGTRU As String,  _
                    ByVal SOCMND As String,  _
                    ByVal ThongTinLienLac As String,  _
                    ByVal DIACHI As String,  _
                    ByVal MALOAIHOSO As String,  _
                    ByVal TENLOAIHOSO As String,  _
                    ByVal TENHOSOKEMTHEO As String,  _
                    ByVal SOBANCHINH As Long,  _
                    ByVal SOBANSAO As Long,  _
                    ByVal SOPHOTO As Long,  _
                    ByVal NGUOINHAN As String,  _
                    ByVal NOIDUNGKHAC As String,  _
                    ByVal NOIDUNGHOSO As String,  _
                    ByVal ChuoiTraCuu As String,  _
                    ByVal ChuoiTraCuu1 As String,  _
                    ByVal ChuoiTraCuu2 As String,  _
                    ByVal ChuoiTraCuu3 As String,  _
                    ByVal NGAYTHONGBAO As String,  _
                    ByVal NgayDoDac As String,  _
                    ByVal NgayNopBienBan As String,  _
                    ByVal NgayNhanThongBaoThue As String) As INBIENNHANHOSORow
            Dim rowINBIENNHANHOSORow As INBIENNHANHOSORow = CType(Me.NewRow,INBIENNHANHOSORow)
            rowINBIENNHANHOSORow.ItemArray = New Object() {TINHTHANH, UBND, QUANHUYEN, PHONGBAN, VANPHONG, LINHVUC, NGAY, SOBIENNHAN, GIOITINH, HOTEN, NGAYHENTRA, NGAYTHUCDIA, DIACHITHUONGTRU, SOCMND, ThongTinLienLac, DIACHI, MALOAIHOSO, TENLOAIHOSO, TENHOSOKEMTHEO, SOBANCHINH, SOBANSAO, SOPHOTO, NGUOINHAN, NOIDUNGKHAC, NOIDUNGHOSO, ChuoiTraCuu, ChuoiTraCuu1, ChuoiTraCuu2, ChuoiTraCuu3, NGAYTHONGBAO, NgayDoDac, NgayNopBienBan, NgayNhanThongBaoThue}
            Me.Rows.Add(rowINBIENNHANHOSORow)
            Return rowINBIENNHANHOSORow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As INBIENNHANHOSODataTable = CType(MyBase.Clone,INBIENNHANHOSODataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New INBIENNHANHOSODataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnUBND = Me.Columns("UBND")
            Me.columnQUANHUYEN = Me.Columns("QUANHUYEN")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnLINHVUC = Me.Columns("LINHVUC")
            Me.columnNGAY = Me.Columns("NGAY")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnGIOITINH = Me.Columns("GIOITINH")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnNGAYTHUCDIA = Me.Columns("NGAYTHUCDIA")
            Me.columnDIACHITHUONGTRU = Me.Columns("DIACHITHUONGTRU")
            Me.columnSOCMND = Me.Columns("SOCMND")
            Me.columnThongTinLienLac = Me.Columns("ThongTinLienLac")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnMALOAIHOSO = Me.Columns("MALOAIHOSO")
            Me.columnTENLOAIHOSO = Me.Columns("TENLOAIHOSO")
            Me.columnTENHOSOKEMTHEO = Me.Columns("TENHOSOKEMTHEO")
            Me.columnSOBANCHINH = Me.Columns("SOBANCHINH")
            Me.columnSOBANSAO = Me.Columns("SOBANSAO")
            Me.columnSOPHOTO = Me.Columns("SOPHOTO")
            Me.columnNGUOINHAN = Me.Columns("NGUOINHAN")
            Me.columnNOIDUNGKHAC = Me.Columns("NOIDUNGKHAC")
            Me.columnNOIDUNGHOSO = Me.Columns("NOIDUNGHOSO")
            Me.columnChuoiTraCuu = Me.Columns("ChuoiTraCuu")
            Me.columnChuoiTraCuu1 = Me.Columns("ChuoiTraCuu1")
            Me.columnChuoiTraCuu2 = Me.Columns("ChuoiTraCuu2")
            Me.columnChuoiTraCuu3 = Me.Columns("ChuoiTraCuu3")
            Me.columnNGAYTHONGBAO = Me.Columns("NGAYTHONGBAO")
            Me.columnNgayDoDac = Me.Columns("NgayDoDac")
            Me.columnNgayNopBienBan = Me.Columns("NgayNopBienBan")
            Me.columnNgayNhanThongBaoThue = Me.Columns("NgayNhanThongBaoThue")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnUBND = New DataColumn("UBND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUBND)
            Me.columnQUANHUYEN = New DataColumn("QUANHUYEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnQUANHUYEN)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnLINHVUC = New DataColumn("LINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLINHVUC)
            Me.columnNGAY = New DataColumn("NGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAY)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnGIOITINH = New DataColumn("GIOITINH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGIOITINH)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnNGAYTHUCDIA = New DataColumn("NGAYTHUCDIA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYTHUCDIA)
            Me.columnDIACHITHUONGTRU = New DataColumn("DIACHITHUONGTRU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHITHUONGTRU)
            Me.columnSOCMND = New DataColumn("SOCMND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOCMND)
            Me.columnThongTinLienLac = New DataColumn("ThongTinLienLac", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnThongTinLienLac)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnMALOAIHOSO = New DataColumn("MALOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMALOAIHOSO)
            Me.columnTENLOAIHOSO = New DataColumn("TENLOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLOAIHOSO)
            Me.columnTENHOSOKEMTHEO = New DataColumn("TENHOSOKEMTHEO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENHOSOKEMTHEO)
            Me.columnSOBANCHINH = New DataColumn("SOBANCHINH", GetType(System.Int64), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBANCHINH)
            Me.columnSOBANSAO = New DataColumn("SOBANSAO", GetType(System.Int64), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBANSAO)
            Me.columnSOPHOTO = New DataColumn("SOPHOTO", GetType(System.Int64), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOPHOTO)
            Me.columnNGUOINHAN = New DataColumn("NGUOINHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOINHAN)
            Me.columnNOIDUNGKHAC = New DataColumn("NOIDUNGKHAC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNOIDUNGKHAC)
            Me.columnNOIDUNGHOSO = New DataColumn("NOIDUNGHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNOIDUNGHOSO)
            Me.columnChuoiTraCuu = New DataColumn("ChuoiTraCuu", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnChuoiTraCuu)
            Me.columnChuoiTraCuu1 = New DataColumn("ChuoiTraCuu1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnChuoiTraCuu1)
            Me.columnChuoiTraCuu2 = New DataColumn("ChuoiTraCuu2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnChuoiTraCuu2)
            Me.columnChuoiTraCuu3 = New DataColumn("ChuoiTraCuu3", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnChuoiTraCuu3)
            Me.columnNGAYTHONGBAO = New DataColumn("NGAYTHONGBAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYTHONGBAO)
            Me.columnNgayDoDac = New DataColumn("NgayDoDac", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgayDoDac)
            Me.columnNgayNopBienBan = New DataColumn("NgayNopBienBan", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgayNopBienBan)
            Me.columnNgayNhanThongBaoThue = New DataColumn("NgayNhanThongBaoThue", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgayNhanThongBaoThue)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnUBND.AllowDBNull = false
            Me.columnQUANHUYEN.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnLINHVUC.AllowDBNull = false
            Me.columnNGAY.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnGIOITINH.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnNGAYTHUCDIA.AllowDBNull = false
            Me.columnDIACHITHUONGTRU.AllowDBNull = false
            Me.columnSOCMND.AllowDBNull = false
            Me.columnThongTinLienLac.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnMALOAIHOSO.AllowDBNull = false
            Me.columnTENLOAIHOSO.AllowDBNull = false
            Me.columnTENHOSOKEMTHEO.AllowDBNull = false
            Me.columnSOBANCHINH.AllowDBNull = false
            Me.columnSOBANSAO.AllowDBNull = false
            Me.columnSOPHOTO.AllowDBNull = false
            Me.columnNGUOINHAN.AllowDBNull = false
            Me.columnNOIDUNGKHAC.AllowDBNull = false
            Me.columnNOIDUNGHOSO.AllowDBNull = false
            Me.columnChuoiTraCuu.AllowDBNull = false
            Me.columnChuoiTraCuu1.AllowDBNull = false
            Me.columnChuoiTraCuu2.AllowDBNull = false
            Me.columnChuoiTraCuu3.AllowDBNull = false
            Me.columnNGAYTHONGBAO.AllowDBNull = false
            Me.columnNgayDoDac.AllowDBNull = false
            Me.columnNgayNopBienBan.AllowDBNull = false
            Me.columnNgayNhanThongBaoThue.AllowDBNull = false
        End Sub
        
        Public Function NewINBIENNHANHOSORow() As INBIENNHANHOSORow
            Return CType(Me.NewRow,INBIENNHANHOSORow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New INBIENNHANHOSORow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(INBIENNHANHOSORow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INBIENNHANHOSORowChangedEvent) Is Nothing) Then
                RaiseEvent INBIENNHANHOSORowChanged(Me, New INBIENNHANHOSORowChangeEvent(CType(e.Row,INBIENNHANHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INBIENNHANHOSORowChangingEvent) Is Nothing) Then
                RaiseEvent INBIENNHANHOSORowChanging(Me, New INBIENNHANHOSORowChangeEvent(CType(e.Row,INBIENNHANHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INBIENNHANHOSORowDeletedEvent) Is Nothing) Then
                RaiseEvent INBIENNHANHOSORowDeleted(Me, New INBIENNHANHOSORowChangeEvent(CType(e.Row,INBIENNHANHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INBIENNHANHOSORowDeletingEvent) Is Nothing) Then
                RaiseEvent INBIENNHANHOSORowDeleting(Me, New INBIENNHANHOSORowChangeEvent(CType(e.Row,INBIENNHANHOSORow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveINBIENNHANHOSORow(ByVal row As INBIENNHANHOSORow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INBIENNHANHOSORow
        Inherits DataRow
        
        Private tableINBIENNHANHOSO As INBIENNHANHOSODataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableINBIENNHANHOSO = CType(Me.Table,INBIENNHANHOSODataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property UBND As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.UBNDColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.UBNDColumn) = value
            End Set
        End Property
        
        Public Property QUANHUYEN As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.QUANHUYENColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.QUANHUYENColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property LINHVUC As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.LINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.LINHVUCColumn) = value
            End Set
        End Property
        
        Public Property NGAY As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NGAYColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NGAYColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property GIOITINH As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.GIOITINHColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.GIOITINHColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.HOTENColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property NGAYTHUCDIA As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NGAYTHUCDIAColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NGAYTHUCDIAColumn) = value
            End Set
        End Property
        
        Public Property DIACHITHUONGTRU As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.DIACHITHUONGTRUColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.DIACHITHUONGTRUColumn) = value
            End Set
        End Property
        
        Public Property SOCMND As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.SOCMNDColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.SOCMNDColumn) = value
            End Set
        End Property
        
        Public Property ThongTinLienLac As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.ThongTinLienLacColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.ThongTinLienLacColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property MALOAIHOSO As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.MALOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.MALOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property TENLOAIHOSO As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.TENLOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.TENLOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property TENHOSOKEMTHEO As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.TENHOSOKEMTHEOColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.TENHOSOKEMTHEOColumn) = value
            End Set
        End Property
        
        Public Property SOBANCHINH As Long
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.SOBANCHINHColumn),Long)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.SOBANCHINHColumn) = value
            End Set
        End Property
        
        Public Property SOBANSAO As Long
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.SOBANSAOColumn),Long)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.SOBANSAOColumn) = value
            End Set
        End Property
        
        Public Property SOPHOTO As Long
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.SOPHOTOColumn),Long)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.SOPHOTOColumn) = value
            End Set
        End Property
        
        Public Property NGUOINHAN As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NGUOINHANColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NGUOINHANColumn) = value
            End Set
        End Property
        
        Public Property NOIDUNGKHAC As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NOIDUNGKHACColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NOIDUNGKHACColumn) = value
            End Set
        End Property
        
        Public Property NOIDUNGHOSO As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NOIDUNGHOSOColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NOIDUNGHOSOColumn) = value
            End Set
        End Property
        
        Public Property ChuoiTraCuu As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.ChuoiTraCuuColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.ChuoiTraCuuColumn) = value
            End Set
        End Property
        
        Public Property ChuoiTraCuu1 As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.ChuoiTraCuu1Column),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.ChuoiTraCuu1Column) = value
            End Set
        End Property
        
        Public Property ChuoiTraCuu2 As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.ChuoiTraCuu2Column),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.ChuoiTraCuu2Column) = value
            End Set
        End Property
        
        Public Property ChuoiTraCuu3 As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.ChuoiTraCuu3Column),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.ChuoiTraCuu3Column) = value
            End Set
        End Property
        
        Public Property NGAYTHONGBAO As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NGAYTHONGBAOColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NGAYTHONGBAOColumn) = value
            End Set
        End Property
        
        Public Property NgayDoDac As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NgayDoDacColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NgayDoDacColumn) = value
            End Set
        End Property
        
        Public Property NgayNopBienBan As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NgayNopBienBanColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NgayNopBienBanColumn) = value
            End Set
        End Property
        
        Public Property NgayNhanThongBaoThue As String
            Get
                Return CType(Me(Me.tableINBIENNHANHOSO.NgayNhanThongBaoThueColumn),String)
            End Get
            Set
                Me(Me.tableINBIENNHANHOSO.NgayNhanThongBaoThueColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INBIENNHANHOSORowChangeEvent
        Inherits EventArgs
        
        Private eventRow As INBIENNHANHOSORow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As INBIENNHANHOSORow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As INBIENNHANHOSORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INTHONGBAOBOSUNGDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnDIACHITHUONGTRU As DataColumn
        
        Private columnSOCMND As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnTENLOAIHOSO As DataColumn
        
        Private columnThongTinLienLac As DataColumn
        
        Friend Sub New()
            MyBase.New("INTHONGBAOBOSUNG")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property DIACHITHUONGTRUColumn As DataColumn
            Get
                Return Me.columnDIACHITHUONGTRU
            End Get
        End Property
        
        Friend ReadOnly Property SOCMNDColumn As DataColumn
            Get
                Return Me.columnSOCMND
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property TENLOAIHOSOColumn As DataColumn
            Get
                Return Me.columnTENLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property ThongTinLienLacColumn As DataColumn
            Get
                Return Me.columnThongTinLienLac
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As INTHONGBAOBOSUNGRow
            Get
                Return CType(Me.Rows(index),INTHONGBAOBOSUNGRow)
            End Get
        End Property
        
        Public Event INTHONGBAOBOSUNGRowChanged As INTHONGBAOBOSUNGRowChangeEventHandler
        
        Public Event INTHONGBAOBOSUNGRowChanging As INTHONGBAOBOSUNGRowChangeEventHandler
        
        Public Event INTHONGBAOBOSUNGRowDeleted As INTHONGBAOBOSUNGRowChangeEventHandler
        
        Public Event INTHONGBAOBOSUNGRowDeleting As INTHONGBAOBOSUNGRowChangeEventHandler
        
        Public Overloads Sub AddINTHONGBAOBOSUNGRow(ByVal row As INTHONGBAOBOSUNGRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddINTHONGBAOBOSUNGRow(ByVal TINHTHANH As String, ByVal CONGTY As String, ByVal VANPHONG As String, ByVal SOBIENNHAN As String, ByVal HOTEN As String, ByVal NGAYNHAN As String, ByVal DIACHITHUONGTRU As String, ByVal SOCMND As String, ByVal DIACHI As String, ByVal TENLOAIHOSO As String, ByVal ThongTinLienLac As String) As INTHONGBAOBOSUNGRow
            Dim rowINTHONGBAOBOSUNGRow As INTHONGBAOBOSUNGRow = CType(Me.NewRow,INTHONGBAOBOSUNGRow)
            rowINTHONGBAOBOSUNGRow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, SOBIENNHAN, HOTEN, NGAYNHAN, DIACHITHUONGTRU, SOCMND, DIACHI, TENLOAIHOSO, ThongTinLienLac}
            Me.Rows.Add(rowINTHONGBAOBOSUNGRow)
            Return rowINTHONGBAOBOSUNGRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As INTHONGBAOBOSUNGDataTable = CType(MyBase.Clone,INTHONGBAOBOSUNGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New INTHONGBAOBOSUNGDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnDIACHITHUONGTRU = Me.Columns("DIACHITHUONGTRU")
            Me.columnSOCMND = Me.Columns("SOCMND")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnTENLOAIHOSO = Me.Columns("TENLOAIHOSO")
            Me.columnThongTinLienLac = Me.Columns("ThongTinLienLac")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnDIACHITHUONGTRU = New DataColumn("DIACHITHUONGTRU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHITHUONGTRU)
            Me.columnSOCMND = New DataColumn("SOCMND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOCMND)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnTENLOAIHOSO = New DataColumn("TENLOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLOAIHOSO)
            Me.columnThongTinLienLac = New DataColumn("ThongTinLienLac", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnThongTinLienLac)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnDIACHITHUONGTRU.AllowDBNull = false
            Me.columnSOCMND.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnTENLOAIHOSO.AllowDBNull = false
            Me.columnThongTinLienLac.AllowDBNull = false
        End Sub
        
        Public Function NewINTHONGBAOBOSUNGRow() As INTHONGBAOBOSUNGRow
            Return CType(Me.NewRow,INTHONGBAOBOSUNGRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New INTHONGBAOBOSUNGRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(INTHONGBAOBOSUNGRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INTHONGBAOBOSUNGRowChangedEvent) Is Nothing) Then
                RaiseEvent INTHONGBAOBOSUNGRowChanged(Me, New INTHONGBAOBOSUNGRowChangeEvent(CType(e.Row,INTHONGBAOBOSUNGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INTHONGBAOBOSUNGRowChangingEvent) Is Nothing) Then
                RaiseEvent INTHONGBAOBOSUNGRowChanging(Me, New INTHONGBAOBOSUNGRowChangeEvent(CType(e.Row,INTHONGBAOBOSUNGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INTHONGBAOBOSUNGRowDeletedEvent) Is Nothing) Then
                RaiseEvent INTHONGBAOBOSUNGRowDeleted(Me, New INTHONGBAOBOSUNGRowChangeEvent(CType(e.Row,INTHONGBAOBOSUNGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INTHONGBAOBOSUNGRowDeletingEvent) Is Nothing) Then
                RaiseEvent INTHONGBAOBOSUNGRowDeleting(Me, New INTHONGBAOBOSUNGRowChangeEvent(CType(e.Row,INTHONGBAOBOSUNGRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveINTHONGBAOBOSUNGRow(ByVal row As INTHONGBAOBOSUNGRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INTHONGBAOBOSUNGRow
        Inherits DataRow
        
        Private tableINTHONGBAOBOSUNG As INTHONGBAOBOSUNGDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableINTHONGBAOBOSUNG = CType(Me.Table,INTHONGBAOBOSUNGDataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.HOTENColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property DIACHITHUONGTRU As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.DIACHITHUONGTRUColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.DIACHITHUONGTRUColumn) = value
            End Set
        End Property
        
        Public Property SOCMND As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.SOCMNDColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.SOCMNDColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property TENLOAIHOSO As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.TENLOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.TENLOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property ThongTinLienLac As String
            Get
                Return CType(Me(Me.tableINTHONGBAOBOSUNG.ThongTinLienLacColumn),String)
            End Get
            Set
                Me(Me.tableINTHONGBAOBOSUNG.ThongTinLienLacColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INTHONGBAOBOSUNGRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As INTHONGBAOBOSUNGRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As INTHONGBAOBOSUNGRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As INTHONGBAOBOSUNGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKELV_LHSDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnTUNGAY As DataColumn
        
        Private columnDENNGAY As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnLOAITHONGKE As DataColumn
        
        Private columnTENLVHS As DataColumn
        
        Private columnTONTRUOC As DataColumn
        
        Private columnMOINHAN As DataColumn
        
        Private columnDAHUY As DataColumn
        
        Private columnCHOBS As DataColumn
        
        Private columnDAGQDUNGHAN As DataColumn
        
        Private columnDAGQQUAHAN As DataColumn
        
        Private columnCHUAGQTRONGHAN As DataColumn
        
        Private columnCHUAGQQUAHAN As DataColumn
        
        Private columnDATRA As DataColumn
        
        Private columnCHUATRA As DataColumn
        
        Friend Sub New()
            MyBase.New("THONGKELV_LHS")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property TUNGAYColumn As DataColumn
            Get
                Return Me.columnTUNGAY
            End Get
        End Property
        
        Friend ReadOnly Property DENNGAYColumn As DataColumn
            Get
                Return Me.columnDENNGAY
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property LOAITHONGKEColumn As DataColumn
            Get
                Return Me.columnLOAITHONGKE
            End Get
        End Property
        
        Friend ReadOnly Property TENLVHSColumn As DataColumn
            Get
                Return Me.columnTENLVHS
            End Get
        End Property
        
        Friend ReadOnly Property TONTRUOCColumn As DataColumn
            Get
                Return Me.columnTONTRUOC
            End Get
        End Property
        
        Friend ReadOnly Property MOINHANColumn As DataColumn
            Get
                Return Me.columnMOINHAN
            End Get
        End Property
        
        Friend ReadOnly Property DAHUYColumn As DataColumn
            Get
                Return Me.columnDAHUY
            End Get
        End Property
        
        Friend ReadOnly Property CHOBSColumn As DataColumn
            Get
                Return Me.columnCHOBS
            End Get
        End Property
        
        Friend ReadOnly Property DAGQDUNGHANColumn As DataColumn
            Get
                Return Me.columnDAGQDUNGHAN
            End Get
        End Property
        
        Friend ReadOnly Property DAGQQUAHANColumn As DataColumn
            Get
                Return Me.columnDAGQQUAHAN
            End Get
        End Property
        
        Friend ReadOnly Property CHUAGQTRONGHANColumn As DataColumn
            Get
                Return Me.columnCHUAGQTRONGHAN
            End Get
        End Property
        
        Friend ReadOnly Property CHUAGQQUAHANColumn As DataColumn
            Get
                Return Me.columnCHUAGQQUAHAN
            End Get
        End Property
        
        Friend ReadOnly Property DATRAColumn As DataColumn
            Get
                Return Me.columnDATRA
            End Get
        End Property
        
        Friend ReadOnly Property CHUATRAColumn As DataColumn
            Get
                Return Me.columnCHUATRA
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As THONGKELV_LHSRow
            Get
                Return CType(Me.Rows(index),THONGKELV_LHSRow)
            End Get
        End Property
        
        Public Event THONGKELV_LHSRowChanged As THONGKELV_LHSRowChangeEventHandler
        
        Public Event THONGKELV_LHSRowChanging As THONGKELV_LHSRowChangeEventHandler
        
        Public Event THONGKELV_LHSRowDeleted As THONGKELV_LHSRowChangeEventHandler
        
        Public Event THONGKELV_LHSRowDeleting As THONGKELV_LHSRowChangeEventHandler
        
        Public Overloads Sub AddTHONGKELV_LHSRow(ByVal row As THONGKELV_LHSRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddTHONGKELV_LHSRow( _
                    ByVal TINHTHANH As String,  _
                    ByVal CONGTY As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal TUNGAY As String,  _
                    ByVal DENNGAY As String,  _
                    ByVal TENLINHVUC As String,  _
                    ByVal LOAITHONGKE As String,  _
                    ByVal TENLVHS As String,  _
                    ByVal TONTRUOC As Integer,  _
                    ByVal MOINHAN As Integer,  _
                    ByVal DAHUY As Integer,  _
                    ByVal CHOBS As Integer,  _
                    ByVal DAGQDUNGHAN As Integer,  _
                    ByVal DAGQQUAHAN As Integer,  _
                    ByVal CHUAGQTRONGHAN As Integer,  _
                    ByVal CHUAGQQUAHAN As Integer,  _
                    ByVal DATRA As Integer,  _
                    ByVal CHUATRA As Integer) As THONGKELV_LHSRow
            Dim rowTHONGKELV_LHSRow As THONGKELV_LHSRow = CType(Me.NewRow,THONGKELV_LHSRow)
            rowTHONGKELV_LHSRow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, PHONGBAN, TUNGAY, DENNGAY, TENLINHVUC, LOAITHONGKE, TENLVHS, TONTRUOC, MOINHAN, DAHUY, CHOBS, DAGQDUNGHAN, DAGQQUAHAN, CHUAGQTRONGHAN, CHUAGQQUAHAN, DATRA, CHUATRA}
            Me.Rows.Add(rowTHONGKELV_LHSRow)
            Return rowTHONGKELV_LHSRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As THONGKELV_LHSDataTable = CType(MyBase.Clone,THONGKELV_LHSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New THONGKELV_LHSDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnTUNGAY = Me.Columns("TUNGAY")
            Me.columnDENNGAY = Me.Columns("DENNGAY")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnLOAITHONGKE = Me.Columns("LOAITHONGKE")
            Me.columnTENLVHS = Me.Columns("TENLVHS")
            Me.columnTONTRUOC = Me.Columns("TONTRUOC")
            Me.columnMOINHAN = Me.Columns("MOINHAN")
            Me.columnDAHUY = Me.Columns("DAHUY")
            Me.columnCHOBS = Me.Columns("CHOBS")
            Me.columnDAGQDUNGHAN = Me.Columns("DAGQDUNGHAN")
            Me.columnDAGQQUAHAN = Me.Columns("DAGQQUAHAN")
            Me.columnCHUAGQTRONGHAN = Me.Columns("CHUAGQTRONGHAN")
            Me.columnCHUAGQQUAHAN = Me.Columns("CHUAGQQUAHAN")
            Me.columnDATRA = Me.Columns("DATRA")
            Me.columnCHUATRA = Me.Columns("CHUATRA")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnTUNGAY = New DataColumn("TUNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTUNGAY)
            Me.columnDENNGAY = New DataColumn("DENNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDENNGAY)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnLOAITHONGKE = New DataColumn("LOAITHONGKE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAITHONGKE)
            Me.columnTENLVHS = New DataColumn("TENLVHS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLVHS)
            Me.columnTONTRUOC = New DataColumn("TONTRUOC", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTONTRUOC)
            Me.columnMOINHAN = New DataColumn("MOINHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMOINHAN)
            Me.columnDAHUY = New DataColumn("DAHUY", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAHUY)
            Me.columnCHOBS = New DataColumn("CHOBS", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHOBS)
            Me.columnDAGQDUNGHAN = New DataColumn("DAGQDUNGHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAGQDUNGHAN)
            Me.columnDAGQQUAHAN = New DataColumn("DAGQQUAHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAGQQUAHAN)
            Me.columnCHUAGQTRONGHAN = New DataColumn("CHUAGQTRONGHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUAGQTRONGHAN)
            Me.columnCHUAGQQUAHAN = New DataColumn("CHUAGQQUAHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUAGQQUAHAN)
            Me.columnDATRA = New DataColumn("DATRA", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDATRA)
            Me.columnCHUATRA = New DataColumn("CHUATRA", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUATRA)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnTUNGAY.AllowDBNull = false
            Me.columnDENNGAY.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnLOAITHONGKE.AllowDBNull = false
            Me.columnTENLVHS.AllowDBNull = false
            Me.columnTONTRUOC.AllowDBNull = false
            Me.columnMOINHAN.AllowDBNull = false
            Me.columnDAHUY.AllowDBNull = false
            Me.columnCHOBS.AllowDBNull = false
            Me.columnDAGQDUNGHAN.AllowDBNull = false
            Me.columnDAGQQUAHAN.AllowDBNull = false
            Me.columnCHUAGQTRONGHAN.AllowDBNull = false
            Me.columnCHUAGQQUAHAN.AllowDBNull = false
            Me.columnDATRA.AllowDBNull = false
            Me.columnCHUATRA.AllowDBNull = false
        End Sub
        
        Public Function NewTHONGKELV_LHSRow() As THONGKELV_LHSRow
            Return CType(Me.NewRow,THONGKELV_LHSRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New THONGKELV_LHSRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(THONGKELV_LHSRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.THONGKELV_LHSRowChangedEvent) Is Nothing) Then
                RaiseEvent THONGKELV_LHSRowChanged(Me, New THONGKELV_LHSRowChangeEvent(CType(e.Row,THONGKELV_LHSRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.THONGKELV_LHSRowChangingEvent) Is Nothing) Then
                RaiseEvent THONGKELV_LHSRowChanging(Me, New THONGKELV_LHSRowChangeEvent(CType(e.Row,THONGKELV_LHSRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.THONGKELV_LHSRowDeletedEvent) Is Nothing) Then
                RaiseEvent THONGKELV_LHSRowDeleted(Me, New THONGKELV_LHSRowChangeEvent(CType(e.Row,THONGKELV_LHSRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.THONGKELV_LHSRowDeletingEvent) Is Nothing) Then
                RaiseEvent THONGKELV_LHSRowDeleting(Me, New THONGKELV_LHSRowChangeEvent(CType(e.Row,THONGKELV_LHSRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveTHONGKELV_LHSRow(ByVal row As THONGKELV_LHSRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKELV_LHSRow
        Inherits DataRow
        
        Private tableTHONGKELV_LHS As THONGKELV_LHSDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableTHONGKELV_LHS = CType(Me.Table,THONGKELV_LHSDataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property TUNGAY As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.TUNGAYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.TUNGAYColumn) = value
            End Set
        End Property
        
        Public Property DENNGAY As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.DENNGAYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.DENNGAYColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property LOAITHONGKE As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.LOAITHONGKEColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.LOAITHONGKEColumn) = value
            End Set
        End Property
        
        Public Property TENLVHS As String
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.TENLVHSColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.TENLVHSColumn) = value
            End Set
        End Property
        
        Public Property TONTRUOC As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.TONTRUOCColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.TONTRUOCColumn) = value
            End Set
        End Property
        
        Public Property MOINHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.MOINHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.MOINHANColumn) = value
            End Set
        End Property
        
        Public Property DAHUY As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.DAHUYColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.DAHUYColumn) = value
            End Set
        End Property
        
        Public Property CHOBS As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.CHOBSColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.CHOBSColumn) = value
            End Set
        End Property
        
        Public Property DAGQDUNGHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.DAGQDUNGHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.DAGQDUNGHANColumn) = value
            End Set
        End Property
        
        Public Property DAGQQUAHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.DAGQQUAHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.DAGQQUAHANColumn) = value
            End Set
        End Property
        
        Public Property CHUAGQTRONGHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.CHUAGQTRONGHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.CHUAGQTRONGHANColumn) = value
            End Set
        End Property
        
        Public Property CHUAGQQUAHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.CHUAGQQUAHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.CHUAGQQUAHANColumn) = value
            End Set
        End Property
        
        Public Property DATRA As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.DATRAColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.DATRAColumn) = value
            End Set
        End Property
        
        Public Property CHUATRA As Integer
            Get
                Return CType(Me(Me.tableTHONGKELV_LHS.CHUATRAColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKELV_LHS.CHUATRAColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKELV_LHSRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As THONGKELV_LHSRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As THONGKELV_LHSRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As THONGKELV_LHSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CTGIAIQUYETHOSODataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnNGAYTHUCTRA As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnNGUOINHANHS As DataColumn
        
        Private columnNGUOINOP As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnTINHTRANG As DataColumn
        
        Private columnNGAYTHULY As DataColumn
        
        Private columnCONGVIEC As DataColumn
        
        Private columnNGUOICHUYEN As DataColumn
        
        Private columnNGUOINHAN As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Private columnHANGQIAIQUYET As DataColumn
        
        Private columnSONGAYTREHAN As DataColumn
        
        Friend Sub New()
            MyBase.New("CTGIAIQUYETHOSO")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property NGAYTHUCTRAColumn As DataColumn
            Get
                Return Me.columnNGAYTHUCTRA
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property NGUOINHANHSColumn As DataColumn
            Get
                Return Me.columnNGUOINHANHS
            End Get
        End Property
        
        Friend ReadOnly Property NGUOINOPColumn As DataColumn
            Get
                Return Me.columnNGUOINOP
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property TINHTRANGColumn As DataColumn
            Get
                Return Me.columnTINHTRANG
            End Get
        End Property
        
        Friend ReadOnly Property NGAYTHULYColumn As DataColumn
            Get
                Return Me.columnNGAYTHULY
            End Get
        End Property
        
        Friend ReadOnly Property CONGVIECColumn As DataColumn
            Get
                Return Me.columnCONGVIEC
            End Get
        End Property
        
        Friend ReadOnly Property NGUOICHUYENColumn As DataColumn
            Get
                Return Me.columnNGUOICHUYEN
            End Get
        End Property
        
        Friend ReadOnly Property NGUOINHANColumn As DataColumn
            Get
                Return Me.columnNGUOINHAN
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Friend ReadOnly Property HANGQIAIQUYETColumn As DataColumn
            Get
                Return Me.columnHANGQIAIQUYET
            End Get
        End Property
        
        Friend ReadOnly Property SONGAYTREHANColumn As DataColumn
            Get
                Return Me.columnSONGAYTREHAN
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As CTGIAIQUYETHOSORow
            Get
                Return CType(Me.Rows(index),CTGIAIQUYETHOSORow)
            End Get
        End Property
        
        Public Event CTGIAIQUYETHOSORowChanged As CTGIAIQUYETHOSORowChangeEventHandler
        
        Public Event CTGIAIQUYETHOSORowChanging As CTGIAIQUYETHOSORowChangeEventHandler
        
        Public Event CTGIAIQUYETHOSORowDeleted As CTGIAIQUYETHOSORowChangeEventHandler
        
        Public Event CTGIAIQUYETHOSORowDeleting As CTGIAIQUYETHOSORowChangeEventHandler
        
        Public Overloads Sub AddCTGIAIQUYETHOSORow(ByVal row As CTGIAIQUYETHOSORow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddCTGIAIQUYETHOSORow( _
                    ByVal TINHTHANH As String,  _
                    ByVal CONGTY As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal TENLINHVUC As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal NGAYNHAN As String,  _
                    ByVal NGAYHENTRA As String,  _
                    ByVal NGAYTHUCTRA As String,  _
                    ByVal LOAIHOSO As String,  _
                    ByVal NGUOINHANHS As String,  _
                    ByVal NGUOINOP As String,  _
                    ByVal DIACHI As String,  _
                    ByVal TINHTRANG As String,  _
                    ByVal NGAYTHULY As String,  _
                    ByVal CONGVIEC As String,  _
                    ByVal NGUOICHUYEN As String,  _
                    ByVal NGUOINHAN As String,  _
                    ByVal GHICHU As String,  _
                    ByVal HANGQIAIQUYET As Integer,  _
                    ByVal SONGAYTREHAN As Integer) As CTGIAIQUYETHOSORow
            Dim rowCTGIAIQUYETHOSORow As CTGIAIQUYETHOSORow = CType(Me.NewRow,CTGIAIQUYETHOSORow)
            rowCTGIAIQUYETHOSORow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, PHONGBAN, TENLINHVUC, SOBIENNHAN, NGAYNHAN, NGAYHENTRA, NGAYTHUCTRA, LOAIHOSO, NGUOINHANHS, NGUOINOP, DIACHI, TINHTRANG, NGAYTHULY, CONGVIEC, NGUOICHUYEN, NGUOINHAN, GHICHU, HANGQIAIQUYET, SONGAYTREHAN}
            Me.Rows.Add(rowCTGIAIQUYETHOSORow)
            Return rowCTGIAIQUYETHOSORow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As CTGIAIQUYETHOSODataTable = CType(MyBase.Clone,CTGIAIQUYETHOSODataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New CTGIAIQUYETHOSODataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnNGAYTHUCTRA = Me.Columns("NGAYTHUCTRA")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnNGUOINHANHS = Me.Columns("NGUOINHANHS")
            Me.columnNGUOINOP = Me.Columns("NGUOINOP")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnTINHTRANG = Me.Columns("TINHTRANG")
            Me.columnNGAYTHULY = Me.Columns("NGAYTHULY")
            Me.columnCONGVIEC = Me.Columns("CONGVIEC")
            Me.columnNGUOICHUYEN = Me.Columns("NGUOICHUYEN")
            Me.columnNGUOINHAN = Me.Columns("NGUOINHAN")
            Me.columnGHICHU = Me.Columns("GHICHU")
            Me.columnHANGQIAIQUYET = Me.Columns("HANGQIAIQUYET")
            Me.columnSONGAYTREHAN = Me.Columns("SONGAYTREHAN")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnNGAYTHUCTRA = New DataColumn("NGAYTHUCTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYTHUCTRA)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnNGUOINHANHS = New DataColumn("NGUOINHANHS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOINHANHS)
            Me.columnNGUOINOP = New DataColumn("NGUOINOP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOINOP)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnTINHTRANG = New DataColumn("TINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTRANG)
            Me.columnNGAYTHULY = New DataColumn("NGAYTHULY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYTHULY)
            Me.columnCONGVIEC = New DataColumn("CONGVIEC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGVIEC)
            Me.columnNGUOICHUYEN = New DataColumn("NGUOICHUYEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOICHUYEN)
            Me.columnNGUOINHAN = New DataColumn("NGUOINHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOINHAN)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnHANGQIAIQUYET = New DataColumn("HANGQIAIQUYET", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHANGQIAIQUYET)
            Me.columnSONGAYTREHAN = New DataColumn("SONGAYTREHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSONGAYTREHAN)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnNGAYTHUCTRA.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnNGUOINHANHS.AllowDBNull = false
            Me.columnNGUOINOP.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnTINHTRANG.AllowDBNull = false
            Me.columnNGAYTHULY.AllowDBNull = false
            Me.columnCONGVIEC.AllowDBNull = false
            Me.columnNGUOICHUYEN.AllowDBNull = false
            Me.columnNGUOINHAN.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
            Me.columnHANGQIAIQUYET.AllowDBNull = false
            Me.columnSONGAYTREHAN.AllowDBNull = false
        End Sub
        
        Public Function NewCTGIAIQUYETHOSORow() As CTGIAIQUYETHOSORow
            Return CType(Me.NewRow,CTGIAIQUYETHOSORow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New CTGIAIQUYETHOSORow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(CTGIAIQUYETHOSORow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CTGIAIQUYETHOSORowChangedEvent) Is Nothing) Then
                RaiseEvent CTGIAIQUYETHOSORowChanged(Me, New CTGIAIQUYETHOSORowChangeEvent(CType(e.Row,CTGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CTGIAIQUYETHOSORowChangingEvent) Is Nothing) Then
                RaiseEvent CTGIAIQUYETHOSORowChanging(Me, New CTGIAIQUYETHOSORowChangeEvent(CType(e.Row,CTGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CTGIAIQUYETHOSORowDeletedEvent) Is Nothing) Then
                RaiseEvent CTGIAIQUYETHOSORowDeleted(Me, New CTGIAIQUYETHOSORowChangeEvent(CType(e.Row,CTGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CTGIAIQUYETHOSORowDeletingEvent) Is Nothing) Then
                RaiseEvent CTGIAIQUYETHOSORowDeleting(Me, New CTGIAIQUYETHOSORowChangeEvent(CType(e.Row,CTGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveCTGIAIQUYETHOSORow(ByVal row As CTGIAIQUYETHOSORow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CTGIAIQUYETHOSORow
        Inherits DataRow
        
        Private tableCTGIAIQUYETHOSO As CTGIAIQUYETHOSODataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableCTGIAIQUYETHOSO = CType(Me.Table,CTGIAIQUYETHOSODataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property NGAYTHUCTRA As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGAYTHUCTRAColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGAYTHUCTRAColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property NGUOINHANHS As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGUOINHANHSColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGUOINHANHSColumn) = value
            End Set
        End Property
        
        Public Property NGUOINOP As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGUOINOPColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGUOINOPColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property TINHTRANG As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.TINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.TINHTRANGColumn) = value
            End Set
        End Property
        
        Public Property NGAYTHULY As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGAYTHULYColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGAYTHULYColumn) = value
            End Set
        End Property
        
        Public Property CONGVIEC As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.CONGVIECColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.CONGVIECColumn) = value
            End Set
        End Property
        
        Public Property NGUOICHUYEN As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGUOICHUYENColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGUOICHUYENColumn) = value
            End Set
        End Property
        
        Public Property NGUOINHAN As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.NGUOINHANColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.NGUOINHANColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.GHICHUColumn) = value
            End Set
        End Property
        
        Public Property HANGQIAIQUYET As Integer
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.HANGQIAIQUYETColumn),Integer)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.HANGQIAIQUYETColumn) = value
            End Set
        End Property
        
        Public Property SONGAYTREHAN As Integer
            Get
                Return CType(Me(Me.tableCTGIAIQUYETHOSO.SONGAYTREHANColumn),Integer)
            End Get
            Set
                Me(Me.tableCTGIAIQUYETHOSO.SONGAYTREHANColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CTGIAIQUYETHOSORowChangeEvent
        Inherits EventArgs
        
        Private eventRow As CTGIAIQUYETHOSORow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As CTGIAIQUYETHOSORow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As CTGIAIQUYETHOSORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOCHUNGDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnLVBAOCAO As DataColumn
        
        Private columnLOAIBAOCAO As DataColumn
        
        Private columnTUNGAY As DataColumn
        
        Private columnDENNGAY As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnSOGIAYPHEP As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnNGAYNHANHS As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnTENLOAIHOSO As DataColumn
        
        Private columnNGAYXULY As DataColumn
        
        Private columnTENLYDO As DataColumn
        
        Private columnNOIDUNGXULY As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Private columnNGUOIXULY As DataColumn
        
        Private columnTINHTRANG As DataColumn
        
        Friend Sub New()
            MyBase.New("DANHSACHHOSOCHUNG")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property LVBAOCAOColumn As DataColumn
            Get
                Return Me.columnLVBAOCAO
            End Get
        End Property
        
        Friend ReadOnly Property LOAIBAOCAOColumn As DataColumn
            Get
                Return Me.columnLOAIBAOCAO
            End Get
        End Property
        
        Friend ReadOnly Property TUNGAYColumn As DataColumn
            Get
                Return Me.columnTUNGAY
            End Get
        End Property
        
        Friend ReadOnly Property DENNGAYColumn As DataColumn
            Get
                Return Me.columnDENNGAY
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property SOGIAYPHEPColumn As DataColumn
            Get
                Return Me.columnSOGIAYPHEP
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANHSColumn As DataColumn
            Get
                Return Me.columnNGAYNHANHS
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property TENLOAIHOSOColumn As DataColumn
            Get
                Return Me.columnTENLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property NGAYXULYColumn As DataColumn
            Get
                Return Me.columnNGAYXULY
            End Get
        End Property
        
        Friend ReadOnly Property TENLYDOColumn As DataColumn
            Get
                Return Me.columnTENLYDO
            End Get
        End Property
        
        Friend ReadOnly Property NOIDUNGXULYColumn As DataColumn
            Get
                Return Me.columnNOIDUNGXULY
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Friend ReadOnly Property NGUOIXULYColumn As DataColumn
            Get
                Return Me.columnNGUOIXULY
            End Get
        End Property
        
        Friend ReadOnly Property TINHTRANGColumn As DataColumn
            Get
                Return Me.columnTINHTRANG
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As DANHSACHHOSOCHUNGRow
            Get
                Return CType(Me.Rows(index),DANHSACHHOSOCHUNGRow)
            End Get
        End Property
        
        Public Event DANHSACHHOSOCHUNGRowChanged As DANHSACHHOSOCHUNGRowChangeEventHandler
        
        Public Event DANHSACHHOSOCHUNGRowChanging As DANHSACHHOSOCHUNGRowChangeEventHandler
        
        Public Event DANHSACHHOSOCHUNGRowDeleted As DANHSACHHOSOCHUNGRowChangeEventHandler
        
        Public Event DANHSACHHOSOCHUNGRowDeleting As DANHSACHHOSOCHUNGRowChangeEventHandler
        
        Public Overloads Sub AddDANHSACHHOSOCHUNGRow(ByVal row As DANHSACHHOSOCHUNGRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddDANHSACHHOSOCHUNGRow( _
                    ByVal TINHTHANH As String,  _
                    ByVal CONGTY As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal LVBAOCAO As String,  _
                    ByVal LOAIBAOCAO As String,  _
                    ByVal TUNGAY As String,  _
                    ByVal DENNGAY As String,  _
                    ByVal TENLINHVUC As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal SOGIAYPHEP As String,  _
                    ByVal HOTEN As String,  _
                    ByVal DIACHI As String,  _
                    ByVal NGAYNHANHS As String,  _
                    ByVal NGAYHENTRA As String,  _
                    ByVal TENLOAIHOSO As String,  _
                    ByVal NGAYXULY As String,  _
                    ByVal TENLYDO As String,  _
                    ByVal NOIDUNGXULY As String,  _
                    ByVal GHICHU As String,  _
                    ByVal NGUOIXULY As String,  _
                    ByVal TINHTRANG As String) As DANHSACHHOSOCHUNGRow
            Dim rowDANHSACHHOSOCHUNGRow As DANHSACHHOSOCHUNGRow = CType(Me.NewRow,DANHSACHHOSOCHUNGRow)
            rowDANHSACHHOSOCHUNGRow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, PHONGBAN, LVBAOCAO, LOAIBAOCAO, TUNGAY, DENNGAY, TENLINHVUC, SOBIENNHAN, SOGIAYPHEP, HOTEN, DIACHI, NGAYNHANHS, NGAYHENTRA, TENLOAIHOSO, NGAYXULY, TENLYDO, NOIDUNGXULY, GHICHU, NGUOIXULY, TINHTRANG}
            Me.Rows.Add(rowDANHSACHHOSOCHUNGRow)
            Return rowDANHSACHHOSOCHUNGRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As DANHSACHHOSOCHUNGDataTable = CType(MyBase.Clone,DANHSACHHOSOCHUNGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New DANHSACHHOSOCHUNGDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnLVBAOCAO = Me.Columns("LVBAOCAO")
            Me.columnLOAIBAOCAO = Me.Columns("LOAIBAOCAO")
            Me.columnTUNGAY = Me.Columns("TUNGAY")
            Me.columnDENNGAY = Me.Columns("DENNGAY")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnSOGIAYPHEP = Me.Columns("SOGIAYPHEP")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnNGAYNHANHS = Me.Columns("NGAYNHANHS")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnTENLOAIHOSO = Me.Columns("TENLOAIHOSO")
            Me.columnNGAYXULY = Me.Columns("NGAYXULY")
            Me.columnTENLYDO = Me.Columns("TENLYDO")
            Me.columnNOIDUNGXULY = Me.Columns("NOIDUNGXULY")
            Me.columnGHICHU = Me.Columns("GHICHU")
            Me.columnNGUOIXULY = Me.Columns("NGUOIXULY")
            Me.columnTINHTRANG = Me.Columns("TINHTRANG")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnLVBAOCAO = New DataColumn("LVBAOCAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLVBAOCAO)
            Me.columnLOAIBAOCAO = New DataColumn("LOAIBAOCAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIBAOCAO)
            Me.columnTUNGAY = New DataColumn("TUNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTUNGAY)
            Me.columnDENNGAY = New DataColumn("DENNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDENNGAY)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnSOGIAYPHEP = New DataColumn("SOGIAYPHEP", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOGIAYPHEP)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnNGAYNHANHS = New DataColumn("NGAYNHANHS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHANHS)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnTENLOAIHOSO = New DataColumn("TENLOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLOAIHOSO)
            Me.columnNGAYXULY = New DataColumn("NGAYXULY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYXULY)
            Me.columnTENLYDO = New DataColumn("TENLYDO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLYDO)
            Me.columnNOIDUNGXULY = New DataColumn("NOIDUNGXULY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNOIDUNGXULY)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnNGUOIXULY = New DataColumn("NGUOIXULY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOIXULY)
            Me.columnTINHTRANG = New DataColumn("TINHTRANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTRANG)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnLVBAOCAO.AllowDBNull = false
            Me.columnLOAIBAOCAO.AllowDBNull = false
            Me.columnTUNGAY.AllowDBNull = false
            Me.columnDENNGAY.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnSOGIAYPHEP.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnNGAYNHANHS.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnTENLOAIHOSO.AllowDBNull = false
            Me.columnNGAYXULY.AllowDBNull = false
            Me.columnTENLYDO.AllowDBNull = false
            Me.columnNOIDUNGXULY.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
            Me.columnNGUOIXULY.AllowDBNull = false
            Me.columnTINHTRANG.AllowDBNull = false
        End Sub
        
        Public Function NewDANHSACHHOSOCHUNGRow() As DANHSACHHOSOCHUNGRow
            Return CType(Me.NewRow,DANHSACHHOSOCHUNGRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New DANHSACHHOSOCHUNGRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(DANHSACHHOSOCHUNGRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DANHSACHHOSOCHUNGRowChangedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUNGRowChanged(Me, New DANHSACHHOSOCHUNGRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUNGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DANHSACHHOSOCHUNGRowChangingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUNGRowChanging(Me, New DANHSACHHOSOCHUNGRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUNGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DANHSACHHOSOCHUNGRowDeletedEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUNGRowDeleted(Me, New DANHSACHHOSOCHUNGRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUNGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DANHSACHHOSOCHUNGRowDeletingEvent) Is Nothing) Then
                RaiseEvent DANHSACHHOSOCHUNGRowDeleting(Me, New DANHSACHHOSOCHUNGRowChangeEvent(CType(e.Row,DANHSACHHOSOCHUNGRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveDANHSACHHOSOCHUNGRow(ByVal row As DANHSACHHOSOCHUNGRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOCHUNGRow
        Inherits DataRow
        
        Private tableDANHSACHHOSOCHUNG As DANHSACHHOSOCHUNGDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableDANHSACHHOSOCHUNG = CType(Me.Table,DANHSACHHOSOCHUNGDataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property LVBAOCAO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.LVBAOCAOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.LVBAOCAOColumn) = value
            End Set
        End Property
        
        Public Property LOAIBAOCAO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.LOAIBAOCAOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.LOAIBAOCAOColumn) = value
            End Set
        End Property
        
        Public Property TUNGAY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.TUNGAYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.TUNGAYColumn) = value
            End Set
        End Property
        
        Public Property DENNGAY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.DENNGAYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.DENNGAYColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property SOGIAYPHEP As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.SOGIAYPHEPColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.SOGIAYPHEPColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.HOTENColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHANHS As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.NGAYNHANHSColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.NGAYNHANHSColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property TENLOAIHOSO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.TENLOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.TENLOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property NGAYXULY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.NGAYXULYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.NGAYXULYColumn) = value
            End Set
        End Property
        
        Public Property TENLYDO As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.TENLYDOColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.TENLYDOColumn) = value
            End Set
        End Property
        
        Public Property NOIDUNGXULY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.NOIDUNGXULYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.NOIDUNGXULYColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.GHICHUColumn) = value
            End Set
        End Property
        
        Public Property NGUOIXULY As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.NGUOIXULYColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.NGUOIXULYColumn) = value
            End Set
        End Property
        
        Public Property TINHTRANG As String
            Get
                Return CType(Me(Me.tableDANHSACHHOSOCHUNG.TINHTRANGColumn),String)
            End Get
            Set
                Me(Me.tableDANHSACHHOSOCHUNG.TINHTRANGColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class DANHSACHHOSOCHUNGRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As DANHSACHHOSOCHUNGRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As DANHSACHHOSOCHUNGRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As DANHSACHHOSOCHUNGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKETONDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnTUNGAY As DataColumn
        
        Private columnDENNGAY As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnNHANVIEN As DataColumn
        
        Private columnTENLOAIHOSO As DataColumn
        
        Private columnSOLUONG As DataColumn
        
        Friend Sub New()
            MyBase.New("THONGKETON")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property TUNGAYColumn As DataColumn
            Get
                Return Me.columnTUNGAY
            End Get
        End Property
        
        Friend ReadOnly Property DENNGAYColumn As DataColumn
            Get
                Return Me.columnDENNGAY
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property NHANVIENColumn As DataColumn
            Get
                Return Me.columnNHANVIEN
            End Get
        End Property
        
        Friend ReadOnly Property TENLOAIHOSOColumn As DataColumn
            Get
                Return Me.columnTENLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property SOLUONGColumn As DataColumn
            Get
                Return Me.columnSOLUONG
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As THONGKETONRow
            Get
                Return CType(Me.Rows(index),THONGKETONRow)
            End Get
        End Property
        
        Public Event THONGKETONRowChanged As THONGKETONRowChangeEventHandler
        
        Public Event THONGKETONRowChanging As THONGKETONRowChangeEventHandler
        
        Public Event THONGKETONRowDeleted As THONGKETONRowChangeEventHandler
        
        Public Event THONGKETONRowDeleting As THONGKETONRowChangeEventHandler
        
        Public Overloads Sub AddTHONGKETONRow(ByVal row As THONGKETONRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddTHONGKETONRow(ByVal TINHTHANH As String, ByVal CONGTY As String, ByVal VANPHONG As String, ByVal PHONGBAN As String, ByVal TUNGAY As String, ByVal DENNGAY As String, ByVal TENLINHVUC As String, ByVal NHANVIEN As String, ByVal TENLOAIHOSO As String, ByVal SOLUONG As Integer) As THONGKETONRow
            Dim rowTHONGKETONRow As THONGKETONRow = CType(Me.NewRow,THONGKETONRow)
            rowTHONGKETONRow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, PHONGBAN, TUNGAY, DENNGAY, TENLINHVUC, NHANVIEN, TENLOAIHOSO, SOLUONG}
            Me.Rows.Add(rowTHONGKETONRow)
            Return rowTHONGKETONRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As THONGKETONDataTable = CType(MyBase.Clone,THONGKETONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New THONGKETONDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnTUNGAY = Me.Columns("TUNGAY")
            Me.columnDENNGAY = Me.Columns("DENNGAY")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnNHANVIEN = Me.Columns("NHANVIEN")
            Me.columnTENLOAIHOSO = Me.Columns("TENLOAIHOSO")
            Me.columnSOLUONG = Me.Columns("SOLUONG")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnTUNGAY = New DataColumn("TUNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTUNGAY)
            Me.columnDENNGAY = New DataColumn("DENNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDENNGAY)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnNHANVIEN = New DataColumn("NHANVIEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNHANVIEN)
            Me.columnTENLOAIHOSO = New DataColumn("TENLOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLOAIHOSO)
            Me.columnSOLUONG = New DataColumn("SOLUONG", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOLUONG)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnTUNGAY.AllowDBNull = false
            Me.columnDENNGAY.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnNHANVIEN.AllowDBNull = false
            Me.columnTENLOAIHOSO.AllowDBNull = false
            Me.columnSOLUONG.AllowDBNull = false
        End Sub
        
        Public Function NewTHONGKETONRow() As THONGKETONRow
            Return CType(Me.NewRow,THONGKETONRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New THONGKETONRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(THONGKETONRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.THONGKETONRowChangedEvent) Is Nothing) Then
                RaiseEvent THONGKETONRowChanged(Me, New THONGKETONRowChangeEvent(CType(e.Row,THONGKETONRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.THONGKETONRowChangingEvent) Is Nothing) Then
                RaiseEvent THONGKETONRowChanging(Me, New THONGKETONRowChangeEvent(CType(e.Row,THONGKETONRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.THONGKETONRowDeletedEvent) Is Nothing) Then
                RaiseEvent THONGKETONRowDeleted(Me, New THONGKETONRowChangeEvent(CType(e.Row,THONGKETONRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.THONGKETONRowDeletingEvent) Is Nothing) Then
                RaiseEvent THONGKETONRowDeleting(Me, New THONGKETONRowChangeEvent(CType(e.Row,THONGKETONRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveTHONGKETONRow(ByVal row As THONGKETONRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKETONRow
        Inherits DataRow
        
        Private tableTHONGKETON As THONGKETONDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableTHONGKETON = CType(Me.Table,THONGKETONDataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableTHONGKETON.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableTHONGKETON.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableTHONGKETON.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableTHONGKETON.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property TUNGAY As String
            Get
                Return CType(Me(Me.tableTHONGKETON.TUNGAYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.TUNGAYColumn) = value
            End Set
        End Property
        
        Public Property DENNGAY As String
            Get
                Return CType(Me(Me.tableTHONGKETON.DENNGAYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.DENNGAYColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableTHONGKETON.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property NHANVIEN As String
            Get
                Return CType(Me(Me.tableTHONGKETON.NHANVIENColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.NHANVIENColumn) = value
            End Set
        End Property
        
        Public Property TENLOAIHOSO As String
            Get
                Return CType(Me(Me.tableTHONGKETON.TENLOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKETON.TENLOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property SOLUONG As Integer
            Get
                Return CType(Me(Me.tableTHONGKETON.SOLUONGColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKETON.SOLUONGColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKETONRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As THONGKETONRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As THONGKETONRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As THONGKETONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INPHIEUCHUYENDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnQUANHUYEN As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnNGUOIGIAO As DataColumn
        
        Private columnNGUOINHAN As DataColumn
        
        Private columnBOPHANGIAO As DataColumn
        
        Private columnBOPHANNHAN As DataColumn
        
        Private columnNGAYBANGIAO As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnHOTENCHUSOHUU As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnNGAYHENTRA As DataColumn
        
        Private columnTHONGTINLIENLAC As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnPHUONG As DataColumn
        
        Private columnDIENTICH As DataColumn
        
        Private columnSOTHUA As DataColumn
        
        Private columnNOIDUNGHOSO As DataColumn
        
        Private columnNGAY As DataColumn
        
        Friend Sub New()
            MyBase.New("INPHIEUCHUYEN")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property QUANHUYENColumn As DataColumn
            Get
                Return Me.columnQUANHUYEN
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property NGUOIGIAOColumn As DataColumn
            Get
                Return Me.columnNGUOIGIAO
            End Get
        End Property
        
        Friend ReadOnly Property NGUOINHANColumn As DataColumn
            Get
                Return Me.columnNGUOINHAN
            End Get
        End Property
        
        Friend ReadOnly Property BOPHANGIAOColumn As DataColumn
            Get
                Return Me.columnBOPHANGIAO
            End Get
        End Property
        
        Friend ReadOnly Property BOPHANNHANColumn As DataColumn
            Get
                Return Me.columnBOPHANNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYBANGIAOColumn As DataColumn
            Get
                Return Me.columnNGAYBANGIAO
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property HOTENCHUSOHUUColumn As DataColumn
            Get
                Return Me.columnHOTENCHUSOHUU
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYHENTRAColumn As DataColumn
            Get
                Return Me.columnNGAYHENTRA
            End Get
        End Property
        
        Friend ReadOnly Property THONGTINLIENLACColumn As DataColumn
            Get
                Return Me.columnTHONGTINLIENLAC
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property PHUONGColumn As DataColumn
            Get
                Return Me.columnPHUONG
            End Get
        End Property
        
        Friend ReadOnly Property DIENTICHColumn As DataColumn
            Get
                Return Me.columnDIENTICH
            End Get
        End Property
        
        Friend ReadOnly Property SOTHUAColumn As DataColumn
            Get
                Return Me.columnSOTHUA
            End Get
        End Property
        
        Friend ReadOnly Property NOIDUNGHOSOColumn As DataColumn
            Get
                Return Me.columnNOIDUNGHOSO
            End Get
        End Property
        
        Friend ReadOnly Property NGAYColumn As DataColumn
            Get
                Return Me.columnNGAY
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As INPHIEUCHUYENRow
            Get
                Return CType(Me.Rows(index),INPHIEUCHUYENRow)
            End Get
        End Property
        
        Public Event INPHIEUCHUYENRowChanged As INPHIEUCHUYENRowChangeEventHandler
        
        Public Event INPHIEUCHUYENRowChanging As INPHIEUCHUYENRowChangeEventHandler
        
        Public Event INPHIEUCHUYENRowDeleted As INPHIEUCHUYENRowChangeEventHandler
        
        Public Event INPHIEUCHUYENRowDeleting As INPHIEUCHUYENRowChangeEventHandler
        
        Public Overloads Sub AddINPHIEUCHUYENRow(ByVal row As INPHIEUCHUYENRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddINPHIEUCHUYENRow( _
                    ByVal TINHTHANH As String,  _
                    ByVal QUANHUYEN As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal NGUOIGIAO As String,  _
                    ByVal NGUOINHAN As String,  _
                    ByVal BOPHANGIAO As String,  _
                    ByVal BOPHANNHAN As String,  _
                    ByVal NGAYBANGIAO As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal HOTENCHUSOHUU As String,  _
                    ByVal NGAYNHAN As String,  _
                    ByVal NGAYHENTRA As String,  _
                    ByVal THONGTINLIENLAC As String,  _
                    ByVal LOAIHOSO As String,  _
                    ByVal DIACHI As String,  _
                    ByVal PHUONG As String,  _
                    ByVal DIENTICH As Double,  _
                    ByVal SOTHUA As Integer,  _
                    ByVal NOIDUNGHOSO As String,  _
                    ByVal NGAY As String) As INPHIEUCHUYENRow
            Dim rowINPHIEUCHUYENRow As INPHIEUCHUYENRow = CType(Me.NewRow,INPHIEUCHUYENRow)
            rowINPHIEUCHUYENRow.ItemArray = New Object() {TINHTHANH, QUANHUYEN, VANPHONG, PHONGBAN, NGUOIGIAO, NGUOINHAN, BOPHANGIAO, BOPHANNHAN, NGAYBANGIAO, SOBIENNHAN, HOTENCHUSOHUU, NGAYNHAN, NGAYHENTRA, THONGTINLIENLAC, LOAIHOSO, DIACHI, PHUONG, DIENTICH, SOTHUA, NOIDUNGHOSO, NGAY}
            Me.Rows.Add(rowINPHIEUCHUYENRow)
            Return rowINPHIEUCHUYENRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As INPHIEUCHUYENDataTable = CType(MyBase.Clone,INPHIEUCHUYENDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New INPHIEUCHUYENDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnQUANHUYEN = Me.Columns("QUANHUYEN")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnNGUOIGIAO = Me.Columns("NGUOIGIAO")
            Me.columnNGUOINHAN = Me.Columns("NGUOINHAN")
            Me.columnBOPHANGIAO = Me.Columns("BOPHANGIAO")
            Me.columnBOPHANNHAN = Me.Columns("BOPHANNHAN")
            Me.columnNGAYBANGIAO = Me.Columns("NGAYBANGIAO")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnHOTENCHUSOHUU = Me.Columns("HOTENCHUSOHUU")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnNGAYHENTRA = Me.Columns("NGAYHENTRA")
            Me.columnTHONGTINLIENLAC = Me.Columns("THONGTINLIENLAC")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnPHUONG = Me.Columns("PHUONG")
            Me.columnDIENTICH = Me.Columns("DIENTICH")
            Me.columnSOTHUA = Me.Columns("SOTHUA")
            Me.columnNOIDUNGHOSO = Me.Columns("NOIDUNGHOSO")
            Me.columnNGAY = Me.Columns("NGAY")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnQUANHUYEN = New DataColumn("QUANHUYEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnQUANHUYEN)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnNGUOIGIAO = New DataColumn("NGUOIGIAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOIGIAO)
            Me.columnNGUOINHAN = New DataColumn("NGUOINHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOINHAN)
            Me.columnBOPHANGIAO = New DataColumn("BOPHANGIAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBOPHANGIAO)
            Me.columnBOPHANNHAN = New DataColumn("BOPHANNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnBOPHANNHAN)
            Me.columnNGAYBANGIAO = New DataColumn("NGAYBANGIAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYBANGIAO)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnHOTENCHUSOHUU = New DataColumn("HOTENCHUSOHUU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTENCHUSOHUU)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnNGAYHENTRA = New DataColumn("NGAYHENTRA", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYHENTRA)
            Me.columnTHONGTINLIENLAC = New DataColumn("THONGTINLIENLAC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTHONGTINLIENLAC)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnPHUONG = New DataColumn("PHUONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHUONG)
            Me.columnDIENTICH = New DataColumn("DIENTICH", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIENTICH)
            Me.columnSOTHUA = New DataColumn("SOTHUA", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOTHUA)
            Me.columnNOIDUNGHOSO = New DataColumn("NOIDUNGHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNOIDUNGHOSO)
            Me.columnNGAY = New DataColumn("NGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAY)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnQUANHUYEN.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnNGUOIGIAO.AllowDBNull = false
            Me.columnNGUOINHAN.AllowDBNull = false
            Me.columnBOPHANGIAO.AllowDBNull = false
            Me.columnBOPHANNHAN.AllowDBNull = false
            Me.columnNGAYBANGIAO.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnHOTENCHUSOHUU.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnNGAYHENTRA.AllowDBNull = false
            Me.columnTHONGTINLIENLAC.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnPHUONG.AllowDBNull = false
            Me.columnDIENTICH.AllowDBNull = false
            Me.columnSOTHUA.AllowDBNull = false
            Me.columnNOIDUNGHOSO.AllowDBNull = false
            Me.columnNGAY.AllowDBNull = false
        End Sub
        
        Public Function NewINPHIEUCHUYENRow() As INPHIEUCHUYENRow
            Return CType(Me.NewRow,INPHIEUCHUYENRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New INPHIEUCHUYENRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(INPHIEUCHUYENRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.INPHIEUCHUYENRowChangedEvent) Is Nothing) Then
                RaiseEvent INPHIEUCHUYENRowChanged(Me, New INPHIEUCHUYENRowChangeEvent(CType(e.Row,INPHIEUCHUYENRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.INPHIEUCHUYENRowChangingEvent) Is Nothing) Then
                RaiseEvent INPHIEUCHUYENRowChanging(Me, New INPHIEUCHUYENRowChangeEvent(CType(e.Row,INPHIEUCHUYENRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.INPHIEUCHUYENRowDeletedEvent) Is Nothing) Then
                RaiseEvent INPHIEUCHUYENRowDeleted(Me, New INPHIEUCHUYENRowChangeEvent(CType(e.Row,INPHIEUCHUYENRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.INPHIEUCHUYENRowDeletingEvent) Is Nothing) Then
                RaiseEvent INPHIEUCHUYENRowDeleting(Me, New INPHIEUCHUYENRowChangeEvent(CType(e.Row,INPHIEUCHUYENRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveINPHIEUCHUYENRow(ByVal row As INPHIEUCHUYENRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INPHIEUCHUYENRow
        Inherits DataRow
        
        Private tableINPHIEUCHUYEN As INPHIEUCHUYENDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableINPHIEUCHUYEN = CType(Me.Table,INPHIEUCHUYENDataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property QUANHUYEN As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.QUANHUYENColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.QUANHUYENColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property NGUOIGIAO As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NGUOIGIAOColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NGUOIGIAOColumn) = value
            End Set
        End Property
        
        Public Property NGUOINHAN As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NGUOINHANColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NGUOINHANColumn) = value
            End Set
        End Property
        
        Public Property BOPHANGIAO As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.BOPHANGIAOColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.BOPHANGIAOColumn) = value
            End Set
        End Property
        
        Public Property BOPHANNHAN As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.BOPHANNHANColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.BOPHANNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYBANGIAO As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NGAYBANGIAOColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NGAYBANGIAOColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property HOTENCHUSOHUU As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.HOTENCHUSOHUUColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.HOTENCHUSOHUUColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYHENTRA As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NGAYHENTRAColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NGAYHENTRAColumn) = value
            End Set
        End Property
        
        Public Property THONGTINLIENLAC As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.THONGTINLIENLACColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.THONGTINLIENLACColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property PHUONG As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.PHUONGColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.PHUONGColumn) = value
            End Set
        End Property
        
        Public Property DIENTICH As Double
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.DIENTICHColumn),Double)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.DIENTICHColumn) = value
            End Set
        End Property
        
        Public Property SOTHUA As Integer
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.SOTHUAColumn),Integer)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.SOTHUAColumn) = value
            End Set
        End Property
        
        Public Property NOIDUNGHOSO As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NOIDUNGHOSOColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NOIDUNGHOSOColumn) = value
            End Set
        End Property
        
        Public Property NGAY As String
            Get
                Return CType(Me(Me.tableINPHIEUCHUYEN.NGAYColumn),String)
            End Get
            Set
                Me(Me.tableINPHIEUCHUYEN.NGAYColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class INPHIEUCHUYENRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As INPHIEUCHUYENRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As INPHIEUCHUYENRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As INPHIEUCHUYENRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THQTTHULYDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnMaLoaiHoSo As DataColumn
        
        Private columnTenLoaiHoSo As DataColumn
        
        Private columnMaTinhTrang As DataColumn
        
        Private columnTenTinhTrang As DataColumn
        
        Private columnSoHSDungHan As DataColumn
        
        Private columnSoHSQuaHan As DataColumn
        
        Friend Sub New()
            MyBase.New("THQTTHULY")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property MaLoaiHoSoColumn As DataColumn
            Get
                Return Me.columnMaLoaiHoSo
            End Get
        End Property
        
        Friend ReadOnly Property TenLoaiHoSoColumn As DataColumn
            Get
                Return Me.columnTenLoaiHoSo
            End Get
        End Property
        
        Friend ReadOnly Property MaTinhTrangColumn As DataColumn
            Get
                Return Me.columnMaTinhTrang
            End Get
        End Property
        
        Friend ReadOnly Property TenTinhTrangColumn As DataColumn
            Get
                Return Me.columnTenTinhTrang
            End Get
        End Property
        
        Friend ReadOnly Property SoHSDungHanColumn As DataColumn
            Get
                Return Me.columnSoHSDungHan
            End Get
        End Property
        
        Friend ReadOnly Property SoHSQuaHanColumn As DataColumn
            Get
                Return Me.columnSoHSQuaHan
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As THQTTHULYRow
            Get
                Return CType(Me.Rows(index),THQTTHULYRow)
            End Get
        End Property
        
        Public Event THQTTHULYRowChanged As THQTTHULYRowChangeEventHandler
        
        Public Event THQTTHULYRowChanging As THQTTHULYRowChangeEventHandler
        
        Public Event THQTTHULYRowDeleted As THQTTHULYRowChangeEventHandler
        
        Public Event THQTTHULYRowDeleting As THQTTHULYRowChangeEventHandler
        
        Public Overloads Sub AddTHQTTHULYRow(ByVal row As THQTTHULYRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddTHQTTHULYRow(ByVal MaLoaiHoSo As String, ByVal TenLoaiHoSo As String, ByVal MaTinhTrang As String, ByVal TenTinhTrang As String, ByVal SoHSDungHan As Integer, ByVal SoHSQuaHan As Integer) As THQTTHULYRow
            Dim rowTHQTTHULYRow As THQTTHULYRow = CType(Me.NewRow,THQTTHULYRow)
            rowTHQTTHULYRow.ItemArray = New Object() {MaLoaiHoSo, TenLoaiHoSo, MaTinhTrang, TenTinhTrang, SoHSDungHan, SoHSQuaHan}
            Me.Rows.Add(rowTHQTTHULYRow)
            Return rowTHQTTHULYRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As THQTTHULYDataTable = CType(MyBase.Clone,THQTTHULYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New THQTTHULYDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnMaLoaiHoSo = Me.Columns("MaLoaiHoSo")
            Me.columnTenLoaiHoSo = Me.Columns("TenLoaiHoSo")
            Me.columnMaTinhTrang = Me.Columns("MaTinhTrang")
            Me.columnTenTinhTrang = Me.Columns("TenTinhTrang")
            Me.columnSoHSDungHan = Me.Columns("SoHSDungHan")
            Me.columnSoHSQuaHan = Me.Columns("SoHSQuaHan")
        End Sub
        
        Private Sub InitClass()
            Me.columnMaLoaiHoSo = New DataColumn("MaLoaiHoSo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMaLoaiHoSo)
            Me.columnTenLoaiHoSo = New DataColumn("TenLoaiHoSo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTenLoaiHoSo)
            Me.columnMaTinhTrang = New DataColumn("MaTinhTrang", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMaTinhTrang)
            Me.columnTenTinhTrang = New DataColumn("TenTinhTrang", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTenTinhTrang)
            Me.columnSoHSDungHan = New DataColumn("SoHSDungHan", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSoHSDungHan)
            Me.columnSoHSQuaHan = New DataColumn("SoHSQuaHan", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSoHSQuaHan)
            Me.columnMaLoaiHoSo.AllowDBNull = false
            Me.columnTenLoaiHoSo.AllowDBNull = false
            Me.columnMaTinhTrang.AllowDBNull = false
            Me.columnTenTinhTrang.AllowDBNull = false
            Me.columnSoHSDungHan.AllowDBNull = false
            Me.columnSoHSQuaHan.AllowDBNull = false
        End Sub
        
        Public Function NewTHQTTHULYRow() As THQTTHULYRow
            Return CType(Me.NewRow,THQTTHULYRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New THQTTHULYRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(THQTTHULYRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.THQTTHULYRowChangedEvent) Is Nothing) Then
                RaiseEvent THQTTHULYRowChanged(Me, New THQTTHULYRowChangeEvent(CType(e.Row,THQTTHULYRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.THQTTHULYRowChangingEvent) Is Nothing) Then
                RaiseEvent THQTTHULYRowChanging(Me, New THQTTHULYRowChangeEvent(CType(e.Row,THQTTHULYRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.THQTTHULYRowDeletedEvent) Is Nothing) Then
                RaiseEvent THQTTHULYRowDeleted(Me, New THQTTHULYRowChangeEvent(CType(e.Row,THQTTHULYRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.THQTTHULYRowDeletingEvent) Is Nothing) Then
                RaiseEvent THQTTHULYRowDeleting(Me, New THQTTHULYRowChangeEvent(CType(e.Row,THQTTHULYRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveTHQTTHULYRow(ByVal row As THQTTHULYRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THQTTHULYRow
        Inherits DataRow
        
        Private tableTHQTTHULY As THQTTHULYDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableTHQTTHULY = CType(Me.Table,THQTTHULYDataTable)
        End Sub
        
        Public Property MaLoaiHoSo As String
            Get
                Return CType(Me(Me.tableTHQTTHULY.MaLoaiHoSoColumn),String)
            End Get
            Set
                Me(Me.tableTHQTTHULY.MaLoaiHoSoColumn) = value
            End Set
        End Property
        
        Public Property TenLoaiHoSo As String
            Get
                Return CType(Me(Me.tableTHQTTHULY.TenLoaiHoSoColumn),String)
            End Get
            Set
                Me(Me.tableTHQTTHULY.TenLoaiHoSoColumn) = value
            End Set
        End Property
        
        Public Property MaTinhTrang As String
            Get
                Return CType(Me(Me.tableTHQTTHULY.MaTinhTrangColumn),String)
            End Get
            Set
                Me(Me.tableTHQTTHULY.MaTinhTrangColumn) = value
            End Set
        End Property
        
        Public Property TenTinhTrang As String
            Get
                Return CType(Me(Me.tableTHQTTHULY.TenTinhTrangColumn),String)
            End Get
            Set
                Me(Me.tableTHQTTHULY.TenTinhTrangColumn) = value
            End Set
        End Property
        
        Public Property SoHSDungHan As Integer
            Get
                Return CType(Me(Me.tableTHQTTHULY.SoHSDungHanColumn),Integer)
            End Get
            Set
                Me(Me.tableTHQTTHULY.SoHSDungHanColumn) = value
            End Set
        End Property
        
        Public Property SoHSQuaHan As Integer
            Get
                Return CType(Me(Me.tableTHQTTHULY.SoHSQuaHanColumn),Integer)
            End Get
            Set
                Me(Me.tableTHQTTHULY.SoHSQuaHanColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THQTTHULYRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As THQTTHULYRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As THQTTHULYRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As THQTTHULYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CTQTTLQUAHANDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnSoBienNhan As DataColumn
        
        Private columnTenLoaiHoSo As DataColumn
        
        Private columnNgayNhan As DataColumn
        
        Private columnSoNgayGiaiQuyet As DataColumn
        
        Private columnTinhTrangQuaHan As DataColumn
        
        Private columnNguoiThuLy As DataColumn
        
        Private columnTinhTrangHienTai As DataColumn
        
        Friend Sub New()
            MyBase.New("CTQTTLQUAHAN")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property SoBienNhanColumn As DataColumn
            Get
                Return Me.columnSoBienNhan
            End Get
        End Property
        
        Friend ReadOnly Property TenLoaiHoSoColumn As DataColumn
            Get
                Return Me.columnTenLoaiHoSo
            End Get
        End Property
        
        Friend ReadOnly Property NgayNhanColumn As DataColumn
            Get
                Return Me.columnNgayNhan
            End Get
        End Property
        
        Friend ReadOnly Property SoNgayGiaiQuyetColumn As DataColumn
            Get
                Return Me.columnSoNgayGiaiQuyet
            End Get
        End Property
        
        Friend ReadOnly Property TinhTrangQuaHanColumn As DataColumn
            Get
                Return Me.columnTinhTrangQuaHan
            End Get
        End Property
        
        Friend ReadOnly Property NguoiThuLyColumn As DataColumn
            Get
                Return Me.columnNguoiThuLy
            End Get
        End Property
        
        Friend ReadOnly Property TinhTrangHienTaiColumn As DataColumn
            Get
                Return Me.columnTinhTrangHienTai
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As CTQTTLQUAHANRow
            Get
                Return CType(Me.Rows(index),CTQTTLQUAHANRow)
            End Get
        End Property
        
        Public Event CTQTTLQUAHANRowChanged As CTQTTLQUAHANRowChangeEventHandler
        
        Public Event CTQTTLQUAHANRowChanging As CTQTTLQUAHANRowChangeEventHandler
        
        Public Event CTQTTLQUAHANRowDeleted As CTQTTLQUAHANRowChangeEventHandler
        
        Public Event CTQTTLQUAHANRowDeleting As CTQTTLQUAHANRowChangeEventHandler
        
        Public Overloads Sub AddCTQTTLQUAHANRow(ByVal row As CTQTTLQUAHANRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddCTQTTLQUAHANRow(ByVal SoBienNhan As String, ByVal TenLoaiHoSo As String, ByVal NgayNhan As String, ByVal SoNgayGiaiQuyet As Integer, ByVal TinhTrangQuaHan As String, ByVal NguoiThuLy As String, ByVal TinhTrangHienTai As String) As CTQTTLQUAHANRow
            Dim rowCTQTTLQUAHANRow As CTQTTLQUAHANRow = CType(Me.NewRow,CTQTTLQUAHANRow)
            rowCTQTTLQUAHANRow.ItemArray = New Object() {SoBienNhan, TenLoaiHoSo, NgayNhan, SoNgayGiaiQuyet, TinhTrangQuaHan, NguoiThuLy, TinhTrangHienTai}
            Me.Rows.Add(rowCTQTTLQUAHANRow)
            Return rowCTQTTLQUAHANRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As CTQTTLQUAHANDataTable = CType(MyBase.Clone,CTQTTLQUAHANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New CTQTTLQUAHANDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnSoBienNhan = Me.Columns("SoBienNhan")
            Me.columnTenLoaiHoSo = Me.Columns("TenLoaiHoSo")
            Me.columnNgayNhan = Me.Columns("NgayNhan")
            Me.columnSoNgayGiaiQuyet = Me.Columns("SoNgayGiaiQuyet")
            Me.columnTinhTrangQuaHan = Me.Columns("TinhTrangQuaHan")
            Me.columnNguoiThuLy = Me.Columns("NguoiThuLy")
            Me.columnTinhTrangHienTai = Me.Columns("TinhTrangHienTai")
        End Sub
        
        Private Sub InitClass()
            Me.columnSoBienNhan = New DataColumn("SoBienNhan", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSoBienNhan)
            Me.columnTenLoaiHoSo = New DataColumn("TenLoaiHoSo", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTenLoaiHoSo)
            Me.columnNgayNhan = New DataColumn("NgayNhan", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNgayNhan)
            Me.columnSoNgayGiaiQuyet = New DataColumn("SoNgayGiaiQuyet", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSoNgayGiaiQuyet)
            Me.columnTinhTrangQuaHan = New DataColumn("TinhTrangQuaHan", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTinhTrangQuaHan)
            Me.columnNguoiThuLy = New DataColumn("NguoiThuLy", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNguoiThuLy)
            Me.columnTinhTrangHienTai = New DataColumn("TinhTrangHienTai", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTinhTrangHienTai)
            Me.columnSoBienNhan.AllowDBNull = false
            Me.columnTenLoaiHoSo.AllowDBNull = false
            Me.columnNgayNhan.AllowDBNull = false
            Me.columnSoNgayGiaiQuyet.AllowDBNull = false
            Me.columnTinhTrangQuaHan.AllowDBNull = false
            Me.columnNguoiThuLy.AllowDBNull = false
            Me.columnTinhTrangHienTai.AllowDBNull = false
        End Sub
        
        Public Function NewCTQTTLQUAHANRow() As CTQTTLQUAHANRow
            Return CType(Me.NewRow,CTQTTLQUAHANRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New CTQTTLQUAHANRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(CTQTTLQUAHANRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CTQTTLQUAHANRowChangedEvent) Is Nothing) Then
                RaiseEvent CTQTTLQUAHANRowChanged(Me, New CTQTTLQUAHANRowChangeEvent(CType(e.Row,CTQTTLQUAHANRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CTQTTLQUAHANRowChangingEvent) Is Nothing) Then
                RaiseEvent CTQTTLQUAHANRowChanging(Me, New CTQTTLQUAHANRowChangeEvent(CType(e.Row,CTQTTLQUAHANRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CTQTTLQUAHANRowDeletedEvent) Is Nothing) Then
                RaiseEvent CTQTTLQUAHANRowDeleted(Me, New CTQTTLQUAHANRowChangeEvent(CType(e.Row,CTQTTLQUAHANRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CTQTTLQUAHANRowDeletingEvent) Is Nothing) Then
                RaiseEvent CTQTTLQUAHANRowDeleting(Me, New CTQTTLQUAHANRowChangeEvent(CType(e.Row,CTQTTLQUAHANRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveCTQTTLQUAHANRow(ByVal row As CTQTTLQUAHANRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CTQTTLQUAHANRow
        Inherits DataRow
        
        Private tableCTQTTLQUAHAN As CTQTTLQUAHANDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableCTQTTLQUAHAN = CType(Me.Table,CTQTTLQUAHANDataTable)
        End Sub
        
        Public Property SoBienNhan As String
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.SoBienNhanColumn),String)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.SoBienNhanColumn) = value
            End Set
        End Property
        
        Public Property TenLoaiHoSo As String
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.TenLoaiHoSoColumn),String)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.TenLoaiHoSoColumn) = value
            End Set
        End Property
        
        Public Property NgayNhan As String
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.NgayNhanColumn),String)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.NgayNhanColumn) = value
            End Set
        End Property
        
        Public Property SoNgayGiaiQuyet As Integer
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.SoNgayGiaiQuyetColumn),Integer)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.SoNgayGiaiQuyetColumn) = value
            End Set
        End Property
        
        Public Property TinhTrangQuaHan As String
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.TinhTrangQuaHanColumn),String)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.TinhTrangQuaHanColumn) = value
            End Set
        End Property
        
        Public Property NguoiThuLy As String
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.NguoiThuLyColumn),String)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.NguoiThuLyColumn) = value
            End Set
        End Property
        
        Public Property TinhTrangHienTai As String
            Get
                Return CType(Me(Me.tableCTQTTLQUAHAN.TinhTrangHienTaiColumn),String)
            End Get
            Set
                Me(Me.tableCTQTTLQUAHAN.TinhTrangHienTaiColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class CTQTTLQUAHANRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As CTQTTLQUAHANRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As CTQTTLQUAHANRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As CTQTTLQUAHANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKEBAOCAOPHUONGXADataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTINHTHANH As DataColumn
        
        Private columnCONGTY As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnTUNGAY As DataColumn
        
        Private columnDENNGAY As DataColumn
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnLOAITHONGKE As DataColumn
        
        Private columnTENLVHS As DataColumn
        
        Private columnTONTRUOC As DataColumn
        
        Private columnMOINHAN As DataColumn
        
        Private columnDAHUY As DataColumn
        
        Private columnCHOBS As DataColumn
        
        Private columnDAGQDUNGHAN As DataColumn
        
        Private columnDAGQQUAHAN As DataColumn
        
        Private columnCHUAGQTRONGHAN As DataColumn
        
        Private columnCHUAGQQUAHAN As DataColumn
        
        Private columnDATRA As DataColumn
        
        Private columnCHUATRA As DataColumn
        
        Private columnNhanThu7 As DataColumn
        
        Friend Sub New()
            MyBase.New("THONGKEBAOCAOPHUONGXA")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TINHTHANHColumn As DataColumn
            Get
                Return Me.columnTINHTHANH
            End Get
        End Property
        
        Friend ReadOnly Property CONGTYColumn As DataColumn
            Get
                Return Me.columnCONGTY
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property TUNGAYColumn As DataColumn
            Get
                Return Me.columnTUNGAY
            End Get
        End Property
        
        Friend ReadOnly Property DENNGAYColumn As DataColumn
            Get
                Return Me.columnDENNGAY
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property LOAITHONGKEColumn As DataColumn
            Get
                Return Me.columnLOAITHONGKE
            End Get
        End Property
        
        Friend ReadOnly Property TENLVHSColumn As DataColumn
            Get
                Return Me.columnTENLVHS
            End Get
        End Property
        
        Friend ReadOnly Property TONTRUOCColumn As DataColumn
            Get
                Return Me.columnTONTRUOC
            End Get
        End Property
        
        Friend ReadOnly Property MOINHANColumn As DataColumn
            Get
                Return Me.columnMOINHAN
            End Get
        End Property
        
        Friend ReadOnly Property DAHUYColumn As DataColumn
            Get
                Return Me.columnDAHUY
            End Get
        End Property
        
        Friend ReadOnly Property CHOBSColumn As DataColumn
            Get
                Return Me.columnCHOBS
            End Get
        End Property
        
        Friend ReadOnly Property DAGQDUNGHANColumn As DataColumn
            Get
                Return Me.columnDAGQDUNGHAN
            End Get
        End Property
        
        Friend ReadOnly Property DAGQQUAHANColumn As DataColumn
            Get
                Return Me.columnDAGQQUAHAN
            End Get
        End Property
        
        Friend ReadOnly Property CHUAGQTRONGHANColumn As DataColumn
            Get
                Return Me.columnCHUAGQTRONGHAN
            End Get
        End Property
        
        Friend ReadOnly Property CHUAGQQUAHANColumn As DataColumn
            Get
                Return Me.columnCHUAGQQUAHAN
            End Get
        End Property
        
        Friend ReadOnly Property DATRAColumn As DataColumn
            Get
                Return Me.columnDATRA
            End Get
        End Property
        
        Friend ReadOnly Property CHUATRAColumn As DataColumn
            Get
                Return Me.columnCHUATRA
            End Get
        End Property
        
        Friend ReadOnly Property NhanThu7Column As DataColumn
            Get
                Return Me.columnNhanThu7
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As THONGKEBAOCAOPHUONGXARow
            Get
                Return CType(Me.Rows(index),THONGKEBAOCAOPHUONGXARow)
            End Get
        End Property
        
        Public Event THONGKEBAOCAOPHUONGXARowChanged As THONGKEBAOCAOPHUONGXARowChangeEventHandler
        
        Public Event THONGKEBAOCAOPHUONGXARowChanging As THONGKEBAOCAOPHUONGXARowChangeEventHandler
        
        Public Event THONGKEBAOCAOPHUONGXARowDeleted As THONGKEBAOCAOPHUONGXARowChangeEventHandler
        
        Public Event THONGKEBAOCAOPHUONGXARowDeleting As THONGKEBAOCAOPHUONGXARowChangeEventHandler
        
        Public Overloads Sub AddTHONGKEBAOCAOPHUONGXARow(ByVal row As THONGKEBAOCAOPHUONGXARow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddTHONGKEBAOCAOPHUONGXARow( _
                    ByVal TINHTHANH As String,  _
                    ByVal CONGTY As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal TUNGAY As String,  _
                    ByVal DENNGAY As String,  _
                    ByVal TENLINHVUC As String,  _
                    ByVal LOAITHONGKE As String,  _
                    ByVal TENLVHS As String,  _
                    ByVal TONTRUOC As Integer,  _
                    ByVal MOINHAN As Integer,  _
                    ByVal DAHUY As Integer,  _
                    ByVal CHOBS As Integer,  _
                    ByVal DAGQDUNGHAN As Integer,  _
                    ByVal DAGQQUAHAN As Integer,  _
                    ByVal CHUAGQTRONGHAN As Integer,  _
                    ByVal CHUAGQQUAHAN As Integer,  _
                    ByVal DATRA As Integer,  _
                    ByVal CHUATRA As Integer,  _
                    ByVal NhanThu7 As Integer) As THONGKEBAOCAOPHUONGXARow
            Dim rowTHONGKEBAOCAOPHUONGXARow As THONGKEBAOCAOPHUONGXARow = CType(Me.NewRow,THONGKEBAOCAOPHUONGXARow)
            rowTHONGKEBAOCAOPHUONGXARow.ItemArray = New Object() {TINHTHANH, CONGTY, VANPHONG, PHONGBAN, TUNGAY, DENNGAY, TENLINHVUC, LOAITHONGKE, TENLVHS, TONTRUOC, MOINHAN, DAHUY, CHOBS, DAGQDUNGHAN, DAGQQUAHAN, CHUAGQTRONGHAN, CHUAGQQUAHAN, DATRA, CHUATRA, NhanThu7}
            Me.Rows.Add(rowTHONGKEBAOCAOPHUONGXARow)
            Return rowTHONGKEBAOCAOPHUONGXARow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As THONGKEBAOCAOPHUONGXADataTable = CType(MyBase.Clone,THONGKEBAOCAOPHUONGXADataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New THONGKEBAOCAOPHUONGXADataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTINHTHANH = Me.Columns("TINHTHANH")
            Me.columnCONGTY = Me.Columns("CONGTY")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnTUNGAY = Me.Columns("TUNGAY")
            Me.columnDENNGAY = Me.Columns("DENNGAY")
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnLOAITHONGKE = Me.Columns("LOAITHONGKE")
            Me.columnTENLVHS = Me.Columns("TENLVHS")
            Me.columnTONTRUOC = Me.Columns("TONTRUOC")
            Me.columnMOINHAN = Me.Columns("MOINHAN")
            Me.columnDAHUY = Me.Columns("DAHUY")
            Me.columnCHOBS = Me.Columns("CHOBS")
            Me.columnDAGQDUNGHAN = Me.Columns("DAGQDUNGHAN")
            Me.columnDAGQQUAHAN = Me.Columns("DAGQQUAHAN")
            Me.columnCHUAGQTRONGHAN = Me.Columns("CHUAGQTRONGHAN")
            Me.columnCHUAGQQUAHAN = Me.Columns("CHUAGQQUAHAN")
            Me.columnDATRA = Me.Columns("DATRA")
            Me.columnCHUATRA = Me.Columns("CHUATRA")
            Me.columnNhanThu7 = Me.Columns("NhanThu7")
        End Sub
        
        Private Sub InitClass()
            Me.columnTINHTHANH = New DataColumn("TINHTHANH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTINHTHANH)
            Me.columnCONGTY = New DataColumn("CONGTY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCONGTY)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnTUNGAY = New DataColumn("TUNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTUNGAY)
            Me.columnDENNGAY = New DataColumn("DENNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDENNGAY)
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnLOAITHONGKE = New DataColumn("LOAITHONGKE", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAITHONGKE)
            Me.columnTENLVHS = New DataColumn("TENLVHS", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLVHS)
            Me.columnTONTRUOC = New DataColumn("TONTRUOC", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTONTRUOC)
            Me.columnMOINHAN = New DataColumn("MOINHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMOINHAN)
            Me.columnDAHUY = New DataColumn("DAHUY", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAHUY)
            Me.columnCHOBS = New DataColumn("CHOBS", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHOBS)
            Me.columnDAGQDUNGHAN = New DataColumn("DAGQDUNGHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAGQDUNGHAN)
            Me.columnDAGQQUAHAN = New DataColumn("DAGQQUAHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAGQQUAHAN)
            Me.columnCHUAGQTRONGHAN = New DataColumn("CHUAGQTRONGHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUAGQTRONGHAN)
            Me.columnCHUAGQQUAHAN = New DataColumn("CHUAGQQUAHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUAGQQUAHAN)
            Me.columnDATRA = New DataColumn("DATRA", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDATRA)
            Me.columnCHUATRA = New DataColumn("CHUATRA", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUATRA)
            Me.columnNhanThu7 = New DataColumn("NhanThu7", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNhanThu7)
            Me.columnTINHTHANH.AllowDBNull = false
            Me.columnCONGTY.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnTUNGAY.AllowDBNull = false
            Me.columnDENNGAY.AllowDBNull = false
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnLOAITHONGKE.AllowDBNull = false
            Me.columnTENLVHS.AllowDBNull = false
            Me.columnTONTRUOC.AllowDBNull = false
            Me.columnMOINHAN.AllowDBNull = false
            Me.columnDAHUY.AllowDBNull = false
            Me.columnCHOBS.AllowDBNull = false
            Me.columnDAGQDUNGHAN.AllowDBNull = false
            Me.columnDAGQQUAHAN.AllowDBNull = false
            Me.columnCHUAGQTRONGHAN.AllowDBNull = false
            Me.columnCHUAGQQUAHAN.AllowDBNull = false
            Me.columnDATRA.AllowDBNull = false
            Me.columnCHUATRA.AllowDBNull = false
            Me.columnNhanThu7.AllowDBNull = false
        End Sub
        
        Public Function NewTHONGKEBAOCAOPHUONGXARow() As THONGKEBAOCAOPHUONGXARow
            Return CType(Me.NewRow,THONGKEBAOCAOPHUONGXARow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New THONGKEBAOCAOPHUONGXARow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(THONGKEBAOCAOPHUONGXARow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.THONGKEBAOCAOPHUONGXARowChangedEvent) Is Nothing) Then
                RaiseEvent THONGKEBAOCAOPHUONGXARowChanged(Me, New THONGKEBAOCAOPHUONGXARowChangeEvent(CType(e.Row,THONGKEBAOCAOPHUONGXARow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.THONGKEBAOCAOPHUONGXARowChangingEvent) Is Nothing) Then
                RaiseEvent THONGKEBAOCAOPHUONGXARowChanging(Me, New THONGKEBAOCAOPHUONGXARowChangeEvent(CType(e.Row,THONGKEBAOCAOPHUONGXARow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.THONGKEBAOCAOPHUONGXARowDeletedEvent) Is Nothing) Then
                RaiseEvent THONGKEBAOCAOPHUONGXARowDeleted(Me, New THONGKEBAOCAOPHUONGXARowChangeEvent(CType(e.Row,THONGKEBAOCAOPHUONGXARow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.THONGKEBAOCAOPHUONGXARowDeletingEvent) Is Nothing) Then
                RaiseEvent THONGKEBAOCAOPHUONGXARowDeleting(Me, New THONGKEBAOCAOPHUONGXARowChangeEvent(CType(e.Row,THONGKEBAOCAOPHUONGXARow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveTHONGKEBAOCAOPHUONGXARow(ByVal row As THONGKEBAOCAOPHUONGXARow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKEBAOCAOPHUONGXARow
        Inherits DataRow
        
        Private tableTHONGKEBAOCAOPHUONGXA As THONGKEBAOCAOPHUONGXADataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableTHONGKEBAOCAOPHUONGXA = CType(Me.Table,THONGKEBAOCAOPHUONGXADataTable)
        End Sub
        
        Public Property TINHTHANH As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.TINHTHANHColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.TINHTHANHColumn) = value
            End Set
        End Property
        
        Public Property CONGTY As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.CONGTYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.CONGTYColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property TUNGAY As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.TUNGAYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.TUNGAYColumn) = value
            End Set
        End Property
        
        Public Property DENNGAY As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.DENNGAYColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.DENNGAYColumn) = value
            End Set
        End Property
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property LOAITHONGKE As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.LOAITHONGKEColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.LOAITHONGKEColumn) = value
            End Set
        End Property
        
        Public Property TENLVHS As String
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.TENLVHSColumn),String)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.TENLVHSColumn) = value
            End Set
        End Property
        
        Public Property TONTRUOC As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.TONTRUOCColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.TONTRUOCColumn) = value
            End Set
        End Property
        
        Public Property MOINHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.MOINHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.MOINHANColumn) = value
            End Set
        End Property
        
        Public Property DAHUY As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.DAHUYColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.DAHUYColumn) = value
            End Set
        End Property
        
        Public Property CHOBS As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHOBSColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHOBSColumn) = value
            End Set
        End Property
        
        Public Property DAGQDUNGHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.DAGQDUNGHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.DAGQDUNGHANColumn) = value
            End Set
        End Property
        
        Public Property DAGQQUAHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.DAGQQUAHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.DAGQQUAHANColumn) = value
            End Set
        End Property
        
        Public Property CHUAGQTRONGHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHUAGQTRONGHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHUAGQTRONGHANColumn) = value
            End Set
        End Property
        
        Public Property CHUAGQQUAHAN As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHUAGQQUAHANColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHUAGQQUAHANColumn) = value
            End Set
        End Property
        
        Public Property DATRA As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.DATRAColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.DATRAColumn) = value
            End Set
        End Property
        
        Public Property CHUATRA As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHUATRAColumn),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.CHUATRAColumn) = value
            End Set
        End Property
        
        Public Property NhanThu7 As Integer
            Get
                Return CType(Me(Me.tableTHONGKEBAOCAOPHUONGXA.NhanThu7Column),Integer)
            End Get
            Set
                Me(Me.tableTHONGKEBAOCAOPHUONGXA.NhanThu7Column) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class THONGKEBAOCAOPHUONGXARowChangeEvent
        Inherits EventArgs
        
        Private eventRow As THONGKEBAOCAOPHUONGXARow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As THONGKEBAOCAOPHUONGXARow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As THONGKEBAOCAOPHUONGXARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class BAOCAOTHANGDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnUBND As DataColumn
        
        Private columnVANPHONG As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnTENDONVI As DataColumn
        
        Private columnTHANG As DataColumn
        
        Private columnCN As DataColumn
        
        Private columnDTCN As DataColumn
        
        Private columnCMD As DataColumn
        
        Private columnDTCMD As DataColumn
        
        Private columnTKE As DataColumn
        
        Private columnDTTKE As DataColumn
        
        Private columnCMOI As DataColumn
        
        Private columnDTCMOI As DataColumn
        
        Private columnSLGCN As DataColumn
        
        Private columnCCCT As DataColumn
        
        Private columnDTCCCT As DataColumn
        
        Private columnDC As DataColumn
        
        Private columnDTDC As DataColumn
        
        Private columnTHOI As DataColumn
        
        Private columnDTTHOI As DataColumn
        
        Private columnCAPCN As DataColumn
        
        Private columnDTCAPCN As DataColumn
        
        Private columnNGUOIBAOCAO As DataColumn
        
        Friend Sub New()
            MyBase.New("BAOCAOTHANG")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property UBNDColumn As DataColumn
            Get
                Return Me.columnUBND
            End Get
        End Property
        
        Friend ReadOnly Property VANPHONGColumn As DataColumn
            Get
                Return Me.columnVANPHONG
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property TENDONVIColumn As DataColumn
            Get
                Return Me.columnTENDONVI
            End Get
        End Property
        
        Friend ReadOnly Property THANGColumn As DataColumn
            Get
                Return Me.columnTHANG
            End Get
        End Property
        
        Friend ReadOnly Property CNColumn As DataColumn
            Get
                Return Me.columnCN
            End Get
        End Property
        
        Friend ReadOnly Property DTCNColumn As DataColumn
            Get
                Return Me.columnDTCN
            End Get
        End Property
        
        Friend ReadOnly Property CMDColumn As DataColumn
            Get
                Return Me.columnCMD
            End Get
        End Property
        
        Friend ReadOnly Property DTCMDColumn As DataColumn
            Get
                Return Me.columnDTCMD
            End Get
        End Property
        
        Friend ReadOnly Property TKEColumn As DataColumn
            Get
                Return Me.columnTKE
            End Get
        End Property
        
        Friend ReadOnly Property DTTKEColumn As DataColumn
            Get
                Return Me.columnDTTKE
            End Get
        End Property
        
        Friend ReadOnly Property CMOIColumn As DataColumn
            Get
                Return Me.columnCMOI
            End Get
        End Property
        
        Friend ReadOnly Property DTCMOIColumn As DataColumn
            Get
                Return Me.columnDTCMOI
            End Get
        End Property
        
        Friend ReadOnly Property SLGCNColumn As DataColumn
            Get
                Return Me.columnSLGCN
            End Get
        End Property
        
        Friend ReadOnly Property CCCTColumn As DataColumn
            Get
                Return Me.columnCCCT
            End Get
        End Property
        
        Friend ReadOnly Property DTCCCTColumn As DataColumn
            Get
                Return Me.columnDTCCCT
            End Get
        End Property
        
        Friend ReadOnly Property DCColumn As DataColumn
            Get
                Return Me.columnDC
            End Get
        End Property
        
        Friend ReadOnly Property DTDCColumn As DataColumn
            Get
                Return Me.columnDTDC
            End Get
        End Property
        
        Friend ReadOnly Property THOIColumn As DataColumn
            Get
                Return Me.columnTHOI
            End Get
        End Property
        
        Friend ReadOnly Property DTTHOIColumn As DataColumn
            Get
                Return Me.columnDTTHOI
            End Get
        End Property
        
        Friend ReadOnly Property CAPCNColumn As DataColumn
            Get
                Return Me.columnCAPCN
            End Get
        End Property
        
        Friend ReadOnly Property DTCAPCNColumn As DataColumn
            Get
                Return Me.columnDTCAPCN
            End Get
        End Property
        
        Friend ReadOnly Property NGUOIBAOCAOColumn As DataColumn
            Get
                Return Me.columnNGUOIBAOCAO
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As BAOCAOTHANGRow
            Get
                Return CType(Me.Rows(index),BAOCAOTHANGRow)
            End Get
        End Property
        
        Public Event BAOCAOTHANGRowChanged As BAOCAOTHANGRowChangeEventHandler
        
        Public Event BAOCAOTHANGRowChanging As BAOCAOTHANGRowChangeEventHandler
        
        Public Event BAOCAOTHANGRowDeleted As BAOCAOTHANGRowChangeEventHandler
        
        Public Event BAOCAOTHANGRowDeleting As BAOCAOTHANGRowChangeEventHandler
        
        Public Overloads Sub AddBAOCAOTHANGRow(ByVal row As BAOCAOTHANGRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddBAOCAOTHANGRow( _
                    ByVal UBND As String,  _
                    ByVal VANPHONG As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal TENDONVI As String,  _
                    ByVal THANG As String,  _
                    ByVal CN As Integer,  _
                    ByVal DTCN As Double,  _
                    ByVal CMD As Integer,  _
                    ByVal DTCMD As Double,  _
                    ByVal TKE As Integer,  _
                    ByVal DTTKE As Double,  _
                    ByVal CMOI As Integer,  _
                    ByVal DTCMOI As Double,  _
                    ByVal SLGCN As Integer,  _
                    ByVal CCCT As Integer,  _
                    ByVal DTCCCT As Double,  _
                    ByVal DC As Integer,  _
                    ByVal DTDC As Double,  _
                    ByVal THOI As Integer,  _
                    ByVal DTTHOI As Double,  _
                    ByVal CAPCN As Integer,  _
                    ByVal DTCAPCN As Double,  _
                    ByVal NGUOIBAOCAO As String) As BAOCAOTHANGRow
            Dim rowBAOCAOTHANGRow As BAOCAOTHANGRow = CType(Me.NewRow,BAOCAOTHANGRow)
            rowBAOCAOTHANGRow.ItemArray = New Object() {UBND, VANPHONG, PHONGBAN, TENDONVI, THANG, CN, DTCN, CMD, DTCMD, TKE, DTTKE, CMOI, DTCMOI, SLGCN, CCCT, DTCCCT, DC, DTDC, THOI, DTTHOI, CAPCN, DTCAPCN, NGUOIBAOCAO}
            Me.Rows.Add(rowBAOCAOTHANGRow)
            Return rowBAOCAOTHANGRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As BAOCAOTHANGDataTable = CType(MyBase.Clone,BAOCAOTHANGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New BAOCAOTHANGDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnUBND = Me.Columns("UBND")
            Me.columnVANPHONG = Me.Columns("VANPHONG")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnTENDONVI = Me.Columns("TENDONVI")
            Me.columnTHANG = Me.Columns("THANG")
            Me.columnCN = Me.Columns("CN")
            Me.columnDTCN = Me.Columns("DTCN")
            Me.columnCMD = Me.Columns("CMD")
            Me.columnDTCMD = Me.Columns("DTCMD")
            Me.columnTKE = Me.Columns("TKE")
            Me.columnDTTKE = Me.Columns("DTTKE")
            Me.columnCMOI = Me.Columns("CMOI")
            Me.columnDTCMOI = Me.Columns("DTCMOI")
            Me.columnSLGCN = Me.Columns("SLGCN")
            Me.columnCCCT = Me.Columns("CCCT")
            Me.columnDTCCCT = Me.Columns("DTCCCT")
            Me.columnDC = Me.Columns("DC")
            Me.columnDTDC = Me.Columns("DTDC")
            Me.columnTHOI = Me.Columns("THOI")
            Me.columnDTTHOI = Me.Columns("DTTHOI")
            Me.columnCAPCN = Me.Columns("CAPCN")
            Me.columnDTCAPCN = Me.Columns("DTCAPCN")
            Me.columnNGUOIBAOCAO = Me.Columns("NGUOIBAOCAO")
        End Sub
        
        Private Sub InitClass()
            Me.columnUBND = New DataColumn("UBND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUBND)
            Me.columnVANPHONG = New DataColumn("VANPHONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnVANPHONG)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnTENDONVI = New DataColumn("TENDONVI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENDONVI)
            Me.columnTHANG = New DataColumn("THANG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTHANG)
            Me.columnCN = New DataColumn("CN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCN)
            Me.columnDTCN = New DataColumn("DTCN", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTCN)
            Me.columnCMD = New DataColumn("CMD", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCMD)
            Me.columnDTCMD = New DataColumn("DTCMD", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTCMD)
            Me.columnTKE = New DataColumn("TKE", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTKE)
            Me.columnDTTKE = New DataColumn("DTTKE", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTTKE)
            Me.columnCMOI = New DataColumn("CMOI", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCMOI)
            Me.columnDTCMOI = New DataColumn("DTCMOI", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTCMOI)
            Me.columnSLGCN = New DataColumn("SLGCN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSLGCN)
            Me.columnCCCT = New DataColumn("CCCT", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCCCT)
            Me.columnDTCCCT = New DataColumn("DTCCCT", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTCCCT)
            Me.columnDC = New DataColumn("DC", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDC)
            Me.columnDTDC = New DataColumn("DTDC", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTDC)
            Me.columnTHOI = New DataColumn("THOI", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTHOI)
            Me.columnDTTHOI = New DataColumn("DTTHOI", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTTHOI)
            Me.columnCAPCN = New DataColumn("CAPCN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCAPCN)
            Me.columnDTCAPCN = New DataColumn("DTCAPCN", GetType(System.Double), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDTCAPCN)
            Me.columnNGUOIBAOCAO = New DataColumn("NGUOIBAOCAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOIBAOCAO)
            Me.columnUBND.AllowDBNull = false
            Me.columnVANPHONG.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnTENDONVI.AllowDBNull = false
            Me.columnTHANG.AllowDBNull = false
            Me.columnCN.AllowDBNull = false
            Me.columnDTCN.AllowDBNull = false
            Me.columnCMD.AllowDBNull = false
            Me.columnDTCMD.AllowDBNull = false
            Me.columnTKE.AllowDBNull = false
            Me.columnDTTKE.AllowDBNull = false
            Me.columnCMOI.AllowDBNull = false
            Me.columnDTCMOI.AllowDBNull = false
            Me.columnSLGCN.AllowDBNull = false
            Me.columnCCCT.AllowDBNull = false
            Me.columnDTCCCT.AllowDBNull = false
            Me.columnDC.AllowDBNull = false
            Me.columnDTDC.AllowDBNull = false
            Me.columnTHOI.AllowDBNull = false
            Me.columnDTTHOI.AllowDBNull = false
            Me.columnCAPCN.AllowDBNull = false
            Me.columnDTCAPCN.AllowDBNull = false
            Me.columnNGUOIBAOCAO.AllowDBNull = false
        End Sub
        
        Public Function NewBAOCAOTHANGRow() As BAOCAOTHANGRow
            Return CType(Me.NewRow,BAOCAOTHANGRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New BAOCAOTHANGRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(BAOCAOTHANGRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BAOCAOTHANGRowChangedEvent) Is Nothing) Then
                RaiseEvent BAOCAOTHANGRowChanged(Me, New BAOCAOTHANGRowChangeEvent(CType(e.Row,BAOCAOTHANGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BAOCAOTHANGRowChangingEvent) Is Nothing) Then
                RaiseEvent BAOCAOTHANGRowChanging(Me, New BAOCAOTHANGRowChangeEvent(CType(e.Row,BAOCAOTHANGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BAOCAOTHANGRowDeletedEvent) Is Nothing) Then
                RaiseEvent BAOCAOTHANGRowDeleted(Me, New BAOCAOTHANGRowChangeEvent(CType(e.Row,BAOCAOTHANGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BAOCAOTHANGRowDeletingEvent) Is Nothing) Then
                RaiseEvent BAOCAOTHANGRowDeleting(Me, New BAOCAOTHANGRowChangeEvent(CType(e.Row,BAOCAOTHANGRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveBAOCAOTHANGRow(ByVal row As BAOCAOTHANGRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class BAOCAOTHANGRow
        Inherits DataRow
        
        Private tableBAOCAOTHANG As BAOCAOTHANGDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableBAOCAOTHANG = CType(Me.Table,BAOCAOTHANGDataTable)
        End Sub
        
        Public Property UBND As String
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.UBNDColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.UBNDColumn) = value
            End Set
        End Property
        
        Public Property VANPHONG As String
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.VANPHONGColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.VANPHONGColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property TENDONVI As String
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.TENDONVIColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.TENDONVIColumn) = value
            End Set
        End Property
        
        Public Property THANG As String
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.THANGColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.THANGColumn) = value
            End Set
        End Property
        
        Public Property CN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.CNColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.CNColumn) = value
            End Set
        End Property
        
        Public Property DTCN As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTCNColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTCNColumn) = value
            End Set
        End Property
        
        Public Property CMD As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.CMDColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.CMDColumn) = value
            End Set
        End Property
        
        Public Property DTCMD As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTCMDColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTCMDColumn) = value
            End Set
        End Property
        
        Public Property TKE As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.TKEColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.TKEColumn) = value
            End Set
        End Property
        
        Public Property DTTKE As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTTKEColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTTKEColumn) = value
            End Set
        End Property
        
        Public Property CMOI As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.CMOIColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.CMOIColumn) = value
            End Set
        End Property
        
        Public Property DTCMOI As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTCMOIColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTCMOIColumn) = value
            End Set
        End Property
        
        Public Property SLGCN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.SLGCNColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.SLGCNColumn) = value
            End Set
        End Property
        
        Public Property CCCT As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.CCCTColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.CCCTColumn) = value
            End Set
        End Property
        
        Public Property DTCCCT As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTCCCTColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTCCCTColumn) = value
            End Set
        End Property
        
        Public Property DC As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DCColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DCColumn) = value
            End Set
        End Property
        
        Public Property DTDC As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTDCColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTDCColumn) = value
            End Set
        End Property
        
        Public Property THOI As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.THOIColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.THOIColumn) = value
            End Set
        End Property
        
        Public Property DTTHOI As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTTHOIColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTTHOIColumn) = value
            End Set
        End Property
        
        Public Property CAPCN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.CAPCNColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.CAPCNColumn) = value
            End Set
        End Property
        
        Public Property DTCAPCN As Double
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.DTCAPCNColumn),Double)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.DTCAPCNColumn) = value
            End Set
        End Property
        
        Public Property NGUOIBAOCAO As String
            Get
                Return CType(Me(Me.tableBAOCAOTHANG.NGUOIBAOCAOColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTHANG.NGUOIBAOCAOColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class BAOCAOTHANGRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As BAOCAOTHANGRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As BAOCAOTHANGRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As BAOCAOTHANGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class HOSOKHONGDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTHANHPHO As DataColumn
        
        Private columnUBND As DataColumn
        
        Private columnQUAN As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnPHUONG As DataColumn
        
        Private columnNGAYTHONGBAO As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnGIOITINH As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnLYDO As DataColumn
        
        Private columnNOIDUNGXULY As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Private columnTENLANHDAO As DataColumn
        
        Private columnCHUCDANHLD As DataColumn
        
        Private columnKYTHAY As DataColumn
        
        Private columnLINHVUC As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnNGUOIBAOCAO As DataColumn
        
        Friend Sub New()
            MyBase.New("HOSOKHONG")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property THANHPHOColumn As DataColumn
            Get
                Return Me.columnTHANHPHO
            End Get
        End Property
        
        Friend ReadOnly Property UBNDColumn As DataColumn
            Get
                Return Me.columnUBND
            End Get
        End Property
        
        Friend ReadOnly Property QUANColumn As DataColumn
            Get
                Return Me.columnQUAN
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property PHUONGColumn As DataColumn
            Get
                Return Me.columnPHUONG
            End Get
        End Property
        
        Friend ReadOnly Property NGAYTHONGBAOColumn As DataColumn
            Get
                Return Me.columnNGAYTHONGBAO
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property GIOITINHColumn As DataColumn
            Get
                Return Me.columnGIOITINH
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property LYDOColumn As DataColumn
            Get
                Return Me.columnLYDO
            End Get
        End Property
        
        Friend ReadOnly Property NOIDUNGXULYColumn As DataColumn
            Get
                Return Me.columnNOIDUNGXULY
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Friend ReadOnly Property TENLANHDAOColumn As DataColumn
            Get
                Return Me.columnTENLANHDAO
            End Get
        End Property
        
        Friend ReadOnly Property CHUCDANHLDColumn As DataColumn
            Get
                Return Me.columnCHUCDANHLD
            End Get
        End Property
        
        Friend ReadOnly Property KYTHAYColumn As DataColumn
            Get
                Return Me.columnKYTHAY
            End Get
        End Property
        
        Friend ReadOnly Property LINHVUCColumn As DataColumn
            Get
                Return Me.columnLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property NGUOIBAOCAOColumn As DataColumn
            Get
                Return Me.columnNGUOIBAOCAO
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As HOSOKHONGRow
            Get
                Return CType(Me.Rows(index),HOSOKHONGRow)
            End Get
        End Property
        
        Public Event HOSOKHONGRowChanged As HOSOKHONGRowChangeEventHandler
        
        Public Event HOSOKHONGRowChanging As HOSOKHONGRowChangeEventHandler
        
        Public Event HOSOKHONGRowDeleted As HOSOKHONGRowChangeEventHandler
        
        Public Event HOSOKHONGRowDeleting As HOSOKHONGRowChangeEventHandler
        
        Public Overloads Sub AddHOSOKHONGRow(ByVal row As HOSOKHONGRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddHOSOKHONGRow( _
                    ByVal THANHPHO As String,  _
                    ByVal UBND As String,  _
                    ByVal QUAN As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal PHUONG As String,  _
                    ByVal NGAYTHONGBAO As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal NGAYNHAN As String,  _
                    ByVal HOTEN As String,  _
                    ByVal GIOITINH As String,  _
                    ByVal DIACHI As String,  _
                    ByVal LYDO As String,  _
                    ByVal NOIDUNGXULY As String,  _
                    ByVal GHICHU As String,  _
                    ByVal TENLANHDAO As String,  _
                    ByVal CHUCDANHLD As String,  _
                    ByVal KYTHAY As String,  _
                    ByVal LINHVUC As String,  _
                    ByVal LOAIHOSO As String,  _
                    ByVal NGUOIBAOCAO As String) As HOSOKHONGRow
            Dim rowHOSOKHONGRow As HOSOKHONGRow = CType(Me.NewRow,HOSOKHONGRow)
            rowHOSOKHONGRow.ItemArray = New Object() {THANHPHO, UBND, QUAN, PHONGBAN, PHUONG, NGAYTHONGBAO, SOBIENNHAN, NGAYNHAN, HOTEN, GIOITINH, DIACHI, LYDO, NOIDUNGXULY, GHICHU, TENLANHDAO, CHUCDANHLD, KYTHAY, LINHVUC, LOAIHOSO, NGUOIBAOCAO}
            Me.Rows.Add(rowHOSOKHONGRow)
            Return rowHOSOKHONGRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As HOSOKHONGDataTable = CType(MyBase.Clone,HOSOKHONGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New HOSOKHONGDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTHANHPHO = Me.Columns("THANHPHO")
            Me.columnUBND = Me.Columns("UBND")
            Me.columnQUAN = Me.Columns("QUAN")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnPHUONG = Me.Columns("PHUONG")
            Me.columnNGAYTHONGBAO = Me.Columns("NGAYTHONGBAO")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnGIOITINH = Me.Columns("GIOITINH")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnLYDO = Me.Columns("LYDO")
            Me.columnNOIDUNGXULY = Me.Columns("NOIDUNGXULY")
            Me.columnGHICHU = Me.Columns("GHICHU")
            Me.columnTENLANHDAO = Me.Columns("TENLANHDAO")
            Me.columnCHUCDANHLD = Me.Columns("CHUCDANHLD")
            Me.columnKYTHAY = Me.Columns("KYTHAY")
            Me.columnLINHVUC = Me.Columns("LINHVUC")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnNGUOIBAOCAO = Me.Columns("NGUOIBAOCAO")
        End Sub
        
        Private Sub InitClass()
            Me.columnTHANHPHO = New DataColumn("THANHPHO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTHANHPHO)
            Me.columnUBND = New DataColumn("UBND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUBND)
            Me.columnQUAN = New DataColumn("QUAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnQUAN)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnPHUONG = New DataColumn("PHUONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHUONG)
            Me.columnNGAYTHONGBAO = New DataColumn("NGAYTHONGBAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYTHONGBAO)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnGIOITINH = New DataColumn("GIOITINH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGIOITINH)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnLYDO = New DataColumn("LYDO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLYDO)
            Me.columnNOIDUNGXULY = New DataColumn("NOIDUNGXULY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNOIDUNGXULY)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnTENLANHDAO = New DataColumn("TENLANHDAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLANHDAO)
            Me.columnCHUCDANHLD = New DataColumn("CHUCDANHLD", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUCDANHLD)
            Me.columnKYTHAY = New DataColumn("KYTHAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKYTHAY)
            Me.columnLINHVUC = New DataColumn("LINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLINHVUC)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnNGUOIBAOCAO = New DataColumn("NGUOIBAOCAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOIBAOCAO)
            Me.columnTHANHPHO.AllowDBNull = false
            Me.columnUBND.AllowDBNull = false
            Me.columnQUAN.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnPHUONG.AllowDBNull = false
            Me.columnNGAYTHONGBAO.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnGIOITINH.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnLYDO.AllowDBNull = false
            Me.columnNOIDUNGXULY.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
            Me.columnTENLANHDAO.AllowDBNull = false
            Me.columnCHUCDANHLD.AllowDBNull = false
            Me.columnKYTHAY.AllowDBNull = false
            Me.columnLINHVUC.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnNGUOIBAOCAO.AllowDBNull = false
        End Sub
        
        Public Function NewHOSOKHONGRow() As HOSOKHONGRow
            Return CType(Me.NewRow,HOSOKHONGRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New HOSOKHONGRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(HOSOKHONGRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HOSOKHONGRowChangedEvent) Is Nothing) Then
                RaiseEvent HOSOKHONGRowChanged(Me, New HOSOKHONGRowChangeEvent(CType(e.Row,HOSOKHONGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HOSOKHONGRowChangingEvent) Is Nothing) Then
                RaiseEvent HOSOKHONGRowChanging(Me, New HOSOKHONGRowChangeEvent(CType(e.Row,HOSOKHONGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HOSOKHONGRowDeletedEvent) Is Nothing) Then
                RaiseEvent HOSOKHONGRowDeleted(Me, New HOSOKHONGRowChangeEvent(CType(e.Row,HOSOKHONGRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HOSOKHONGRowDeletingEvent) Is Nothing) Then
                RaiseEvent HOSOKHONGRowDeleting(Me, New HOSOKHONGRowChangeEvent(CType(e.Row,HOSOKHONGRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveHOSOKHONGRow(ByVal row As HOSOKHONGRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class HOSOKHONGRow
        Inherits DataRow
        
        Private tableHOSOKHONG As HOSOKHONGDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableHOSOKHONG = CType(Me.Table,HOSOKHONGDataTable)
        End Sub
        
        Public Property THANHPHO As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.THANHPHOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.THANHPHOColumn) = value
            End Set
        End Property
        
        Public Property UBND As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.UBNDColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.UBNDColumn) = value
            End Set
        End Property
        
        Public Property QUAN As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.QUANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.QUANColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property PHUONG As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.PHUONGColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.PHUONGColumn) = value
            End Set
        End Property
        
        Public Property NGAYTHONGBAO As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.NGAYTHONGBAOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.NGAYTHONGBAOColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.HOTENColumn) = value
            End Set
        End Property
        
        Public Property GIOITINH As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.GIOITINHColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.GIOITINHColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property LYDO As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.LYDOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.LYDOColumn) = value
            End Set
        End Property
        
        Public Property NOIDUNGXULY As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.NOIDUNGXULYColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.NOIDUNGXULYColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.GHICHUColumn) = value
            End Set
        End Property
        
        Public Property TENLANHDAO As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.TENLANHDAOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.TENLANHDAOColumn) = value
            End Set
        End Property
        
        Public Property CHUCDANHLD As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.CHUCDANHLDColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.CHUCDANHLDColumn) = value
            End Set
        End Property
        
        Public Property KYTHAY As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.KYTHAYColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.KYTHAYColumn) = value
            End Set
        End Property
        
        Public Property LINHVUC As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.LINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.LINHVUCColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property NGUOIBAOCAO As String
            Get
                Return CType(Me(Me.tableHOSOKHONG.NGUOIBAOCAOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOKHONG.NGUOIBAOCAOColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class HOSOKHONGRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As HOSOKHONGRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As HOSOKHONGRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As HOSOKHONGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class HOSOGIAIQUYETDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTHANHPHO As DataColumn
        
        Private columnUBND As DataColumn
        
        Private columnQUAN As DataColumn
        
        Private columnPHONGBAN As DataColumn
        
        Private columnPHUONG As DataColumn
        
        Private columnNGAYTHONGBAO As DataColumn
        
        Private columnSOBIENNHAN As DataColumn
        
        Private columnNGAYNHAN As DataColumn
        
        Private columnHOTEN As DataColumn
        
        Private columnGIOITINH As DataColumn
        
        Private columnDIACHI As DataColumn
        
        Private columnLYDO As DataColumn
        
        Private columnNOIDUNGXULY As DataColumn
        
        Private columnGHICHU As DataColumn
        
        Private columnTENLANHDAO As DataColumn
        
        Private columnCHUCDANHLD As DataColumn
        
        Private columnKYTHAY As DataColumn
        
        Private columnLINHVUC As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnNGUOIBAOCAO As DataColumn
        
        Friend Sub New()
            MyBase.New("HOSOGIAIQUYET")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property THANHPHOColumn As DataColumn
            Get
                Return Me.columnTHANHPHO
            End Get
        End Property
        
        Friend ReadOnly Property UBNDColumn As DataColumn
            Get
                Return Me.columnUBND
            End Get
        End Property
        
        Friend ReadOnly Property QUANColumn As DataColumn
            Get
                Return Me.columnQUAN
            End Get
        End Property
        
        Friend ReadOnly Property PHONGBANColumn As DataColumn
            Get
                Return Me.columnPHONGBAN
            End Get
        End Property
        
        Friend ReadOnly Property PHUONGColumn As DataColumn
            Get
                Return Me.columnPHUONG
            End Get
        End Property
        
        Friend ReadOnly Property NGAYTHONGBAOColumn As DataColumn
            Get
                Return Me.columnNGAYTHONGBAO
            End Get
        End Property
        
        Friend ReadOnly Property SOBIENNHANColumn As DataColumn
            Get
                Return Me.columnSOBIENNHAN
            End Get
        End Property
        
        Friend ReadOnly Property NGAYNHANColumn As DataColumn
            Get
                Return Me.columnNGAYNHAN
            End Get
        End Property
        
        Friend ReadOnly Property HOTENColumn As DataColumn
            Get
                Return Me.columnHOTEN
            End Get
        End Property
        
        Friend ReadOnly Property GIOITINHColumn As DataColumn
            Get
                Return Me.columnGIOITINH
            End Get
        End Property
        
        Friend ReadOnly Property DIACHIColumn As DataColumn
            Get
                Return Me.columnDIACHI
            End Get
        End Property
        
        Friend ReadOnly Property LYDOColumn As DataColumn
            Get
                Return Me.columnLYDO
            End Get
        End Property
        
        Friend ReadOnly Property NOIDUNGXULYColumn As DataColumn
            Get
                Return Me.columnNOIDUNGXULY
            End Get
        End Property
        
        Friend ReadOnly Property GHICHUColumn As DataColumn
            Get
                Return Me.columnGHICHU
            End Get
        End Property
        
        Friend ReadOnly Property TENLANHDAOColumn As DataColumn
            Get
                Return Me.columnTENLANHDAO
            End Get
        End Property
        
        Friend ReadOnly Property CHUCDANHLDColumn As DataColumn
            Get
                Return Me.columnCHUCDANHLD
            End Get
        End Property
        
        Friend ReadOnly Property KYTHAYColumn As DataColumn
            Get
                Return Me.columnKYTHAY
            End Get
        End Property
        
        Friend ReadOnly Property LINHVUCColumn As DataColumn
            Get
                Return Me.columnLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property NGUOIBAOCAOColumn As DataColumn
            Get
                Return Me.columnNGUOIBAOCAO
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As HOSOGIAIQUYETRow
            Get
                Return CType(Me.Rows(index),HOSOGIAIQUYETRow)
            End Get
        End Property
        
        Public Event HOSOGIAIQUYETRowChanged As HOSOGIAIQUYETRowChangeEventHandler
        
        Public Event HOSOGIAIQUYETRowChanging As HOSOGIAIQUYETRowChangeEventHandler
        
        Public Event HOSOGIAIQUYETRowDeleted As HOSOGIAIQUYETRowChangeEventHandler
        
        Public Event HOSOGIAIQUYETRowDeleting As HOSOGIAIQUYETRowChangeEventHandler
        
        Public Overloads Sub AddHOSOGIAIQUYETRow(ByVal row As HOSOGIAIQUYETRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddHOSOGIAIQUYETRow( _
                    ByVal THANHPHO As String,  _
                    ByVal UBND As String,  _
                    ByVal QUAN As String,  _
                    ByVal PHONGBAN As String,  _
                    ByVal PHUONG As String,  _
                    ByVal NGAYTHONGBAO As String,  _
                    ByVal SOBIENNHAN As String,  _
                    ByVal NGAYNHAN As String,  _
                    ByVal HOTEN As String,  _
                    ByVal GIOITINH As String,  _
                    ByVal DIACHI As String,  _
                    ByVal LYDO As String,  _
                    ByVal NOIDUNGXULY As String,  _
                    ByVal GHICHU As String,  _
                    ByVal TENLANHDAO As String,  _
                    ByVal CHUCDANHLD As String,  _
                    ByVal KYTHAY As String,  _
                    ByVal LINHVUC As String,  _
                    ByVal LOAIHOSO As String,  _
                    ByVal NGUOIBAOCAO As String) As HOSOGIAIQUYETRow
            Dim rowHOSOGIAIQUYETRow As HOSOGIAIQUYETRow = CType(Me.NewRow,HOSOGIAIQUYETRow)
            rowHOSOGIAIQUYETRow.ItemArray = New Object() {THANHPHO, UBND, QUAN, PHONGBAN, PHUONG, NGAYTHONGBAO, SOBIENNHAN, NGAYNHAN, HOTEN, GIOITINH, DIACHI, LYDO, NOIDUNGXULY, GHICHU, TENLANHDAO, CHUCDANHLD, KYTHAY, LINHVUC, LOAIHOSO, NGUOIBAOCAO}
            Me.Rows.Add(rowHOSOGIAIQUYETRow)
            Return rowHOSOGIAIQUYETRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As HOSOGIAIQUYETDataTable = CType(MyBase.Clone,HOSOGIAIQUYETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New HOSOGIAIQUYETDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTHANHPHO = Me.Columns("THANHPHO")
            Me.columnUBND = Me.Columns("UBND")
            Me.columnQUAN = Me.Columns("QUAN")
            Me.columnPHONGBAN = Me.Columns("PHONGBAN")
            Me.columnPHUONG = Me.Columns("PHUONG")
            Me.columnNGAYTHONGBAO = Me.Columns("NGAYTHONGBAO")
            Me.columnSOBIENNHAN = Me.Columns("SOBIENNHAN")
            Me.columnNGAYNHAN = Me.Columns("NGAYNHAN")
            Me.columnHOTEN = Me.Columns("HOTEN")
            Me.columnGIOITINH = Me.Columns("GIOITINH")
            Me.columnDIACHI = Me.Columns("DIACHI")
            Me.columnLYDO = Me.Columns("LYDO")
            Me.columnNOIDUNGXULY = Me.Columns("NOIDUNGXULY")
            Me.columnGHICHU = Me.Columns("GHICHU")
            Me.columnTENLANHDAO = Me.Columns("TENLANHDAO")
            Me.columnCHUCDANHLD = Me.Columns("CHUCDANHLD")
            Me.columnKYTHAY = Me.Columns("KYTHAY")
            Me.columnLINHVUC = Me.Columns("LINHVUC")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnNGUOIBAOCAO = Me.Columns("NGUOIBAOCAO")
        End Sub
        
        Private Sub InitClass()
            Me.columnTHANHPHO = New DataColumn("THANHPHO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTHANHPHO)
            Me.columnUBND = New DataColumn("UBND", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnUBND)
            Me.columnQUAN = New DataColumn("QUAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnQUAN)
            Me.columnPHONGBAN = New DataColumn("PHONGBAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHONGBAN)
            Me.columnPHUONG = New DataColumn("PHUONG", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnPHUONG)
            Me.columnNGAYTHONGBAO = New DataColumn("NGAYTHONGBAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYTHONGBAO)
            Me.columnSOBIENNHAN = New DataColumn("SOBIENNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnSOBIENNHAN)
            Me.columnNGAYNHAN = New DataColumn("NGAYNHAN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGAYNHAN)
            Me.columnHOTEN = New DataColumn("HOTEN", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnHOTEN)
            Me.columnGIOITINH = New DataColumn("GIOITINH", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGIOITINH)
            Me.columnDIACHI = New DataColumn("DIACHI", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDIACHI)
            Me.columnLYDO = New DataColumn("LYDO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLYDO)
            Me.columnNOIDUNGXULY = New DataColumn("NOIDUNGXULY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNOIDUNGXULY)
            Me.columnGHICHU = New DataColumn("GHICHU", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnGHICHU)
            Me.columnTENLANHDAO = New DataColumn("TENLANHDAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLANHDAO)
            Me.columnCHUCDANHLD = New DataColumn("CHUCDANHLD", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUCDANHLD)
            Me.columnKYTHAY = New DataColumn("KYTHAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKYTHAY)
            Me.columnLINHVUC = New DataColumn("LINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLINHVUC)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnNGUOIBAOCAO = New DataColumn("NGUOIBAOCAO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnNGUOIBAOCAO)
            Me.columnTHANHPHO.AllowDBNull = false
            Me.columnUBND.AllowDBNull = false
            Me.columnQUAN.AllowDBNull = false
            Me.columnPHONGBAN.AllowDBNull = false
            Me.columnPHUONG.AllowDBNull = false
            Me.columnNGAYTHONGBAO.AllowDBNull = false
            Me.columnSOBIENNHAN.AllowDBNull = false
            Me.columnNGAYNHAN.AllowDBNull = false
            Me.columnHOTEN.AllowDBNull = false
            Me.columnGIOITINH.AllowDBNull = false
            Me.columnDIACHI.AllowDBNull = false
            Me.columnLYDO.AllowDBNull = false
            Me.columnNOIDUNGXULY.AllowDBNull = false
            Me.columnGHICHU.AllowDBNull = false
            Me.columnTENLANHDAO.AllowDBNull = false
            Me.columnCHUCDANHLD.AllowDBNull = false
            Me.columnKYTHAY.AllowDBNull = false
            Me.columnLINHVUC.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnNGUOIBAOCAO.AllowDBNull = false
        End Sub
        
        Public Function NewHOSOGIAIQUYETRow() As HOSOGIAIQUYETRow
            Return CType(Me.NewRow,HOSOGIAIQUYETRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New HOSOGIAIQUYETRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(HOSOGIAIQUYETRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.HOSOGIAIQUYETRowChangedEvent) Is Nothing) Then
                RaiseEvent HOSOGIAIQUYETRowChanged(Me, New HOSOGIAIQUYETRowChangeEvent(CType(e.Row,HOSOGIAIQUYETRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.HOSOGIAIQUYETRowChangingEvent) Is Nothing) Then
                RaiseEvent HOSOGIAIQUYETRowChanging(Me, New HOSOGIAIQUYETRowChangeEvent(CType(e.Row,HOSOGIAIQUYETRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.HOSOGIAIQUYETRowDeletedEvent) Is Nothing) Then
                RaiseEvent HOSOGIAIQUYETRowDeleted(Me, New HOSOGIAIQUYETRowChangeEvent(CType(e.Row,HOSOGIAIQUYETRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.HOSOGIAIQUYETRowDeletingEvent) Is Nothing) Then
                RaiseEvent HOSOGIAIQUYETRowDeleting(Me, New HOSOGIAIQUYETRowChangeEvent(CType(e.Row,HOSOGIAIQUYETRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveHOSOGIAIQUYETRow(ByVal row As HOSOGIAIQUYETRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class HOSOGIAIQUYETRow
        Inherits DataRow
        
        Private tableHOSOGIAIQUYET As HOSOGIAIQUYETDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableHOSOGIAIQUYET = CType(Me.Table,HOSOGIAIQUYETDataTable)
        End Sub
        
        Public Property THANHPHO As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.THANHPHOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.THANHPHOColumn) = value
            End Set
        End Property
        
        Public Property UBND As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.UBNDColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.UBNDColumn) = value
            End Set
        End Property
        
        Public Property QUAN As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.QUANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.QUANColumn) = value
            End Set
        End Property
        
        Public Property PHONGBAN As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.PHONGBANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.PHONGBANColumn) = value
            End Set
        End Property
        
        Public Property PHUONG As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.PHUONGColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.PHUONGColumn) = value
            End Set
        End Property
        
        Public Property NGAYTHONGBAO As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.NGAYTHONGBAOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.NGAYTHONGBAOColumn) = value
            End Set
        End Property
        
        Public Property SOBIENNHAN As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.SOBIENNHANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.SOBIENNHANColumn) = value
            End Set
        End Property
        
        Public Property NGAYNHAN As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.NGAYNHANColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.NGAYNHANColumn) = value
            End Set
        End Property
        
        Public Property HOTEN As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.HOTENColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.HOTENColumn) = value
            End Set
        End Property
        
        Public Property GIOITINH As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.GIOITINHColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.GIOITINHColumn) = value
            End Set
        End Property
        
        Public Property DIACHI As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.DIACHIColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.DIACHIColumn) = value
            End Set
        End Property
        
        Public Property LYDO As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.LYDOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.LYDOColumn) = value
            End Set
        End Property
        
        Public Property NOIDUNGXULY As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.NOIDUNGXULYColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.NOIDUNGXULYColumn) = value
            End Set
        End Property
        
        Public Property GHICHU As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.GHICHUColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.GHICHUColumn) = value
            End Set
        End Property
        
        Public Property TENLANHDAO As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.TENLANHDAOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.TENLANHDAOColumn) = value
            End Set
        End Property
        
        Public Property CHUCDANHLD As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.CHUCDANHLDColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.CHUCDANHLDColumn) = value
            End Set
        End Property
        
        Public Property KYTHAY As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.KYTHAYColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.KYTHAYColumn) = value
            End Set
        End Property
        
        Public Property LINHVUC As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.LINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.LINHVUCColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property NGUOIBAOCAO As String
            Get
                Return CType(Me(Me.tableHOSOGIAIQUYET.NGUOIBAOCAOColumn),String)
            End Get
            Set
                Me(Me.tableHOSOGIAIQUYET.NGUOIBAOCAOColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class HOSOGIAIQUYETRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As HOSOGIAIQUYETRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As HOSOGIAIQUYETRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As HOSOGIAIQUYETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class BAOCAOTINHHINHGIAIQUYETHOSODataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnTENLINHVUC As DataColumn
        
        Private columnLOAIHOSO As DataColumn
        
        Private columnMALOAIHOSO As DataColumn
        
        Private columnTONTRUOC As DataColumn
        
        Private columnMOINHAN As DataColumn
        
        Private columnDAHUY As DataColumn
        
        Private columnDAGQDUNGHAN As DataColumn
        
        Private columnDAGQQUAHAN As DataColumn
        
        Private columnCHUAGQQUAHAN As DataColumn
        
        Private columnCHOBS As DataColumn
        
        Private columnKHONGGQ As DataColumn
        
        Private columnDATRADAN As DataColumn
        
        Private columnCHUATRA As DataColumn
        
        Private columnTUNGAY As DataColumn
        
        Private columnDENNGAY As DataColumn
        
        Friend Sub New()
            MyBase.New("BAOCAOTINHHINHGIAIQUYETHOSO")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property TENLINHVUCColumn As DataColumn
            Get
                Return Me.columnTENLINHVUC
            End Get
        End Property
        
        Friend ReadOnly Property LOAIHOSOColumn As DataColumn
            Get
                Return Me.columnLOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property MALOAIHOSOColumn As DataColumn
            Get
                Return Me.columnMALOAIHOSO
            End Get
        End Property
        
        Friend ReadOnly Property TONTRUOCColumn As DataColumn
            Get
                Return Me.columnTONTRUOC
            End Get
        End Property
        
        Friend ReadOnly Property MOINHANColumn As DataColumn
            Get
                Return Me.columnMOINHAN
            End Get
        End Property
        
        Friend ReadOnly Property DAHUYColumn As DataColumn
            Get
                Return Me.columnDAHUY
            End Get
        End Property
        
        Friend ReadOnly Property DAGQDUNGHANColumn As DataColumn
            Get
                Return Me.columnDAGQDUNGHAN
            End Get
        End Property
        
        Friend ReadOnly Property DAGQQUAHANColumn As DataColumn
            Get
                Return Me.columnDAGQQUAHAN
            End Get
        End Property
        
        Friend ReadOnly Property CHUAGQQUAHANColumn As DataColumn
            Get
                Return Me.columnCHUAGQQUAHAN
            End Get
        End Property
        
        Friend ReadOnly Property CHOBSColumn As DataColumn
            Get
                Return Me.columnCHOBS
            End Get
        End Property
        
        Friend ReadOnly Property KHONGGQColumn As DataColumn
            Get
                Return Me.columnKHONGGQ
            End Get
        End Property
        
        Friend ReadOnly Property DATRADANColumn As DataColumn
            Get
                Return Me.columnDATRADAN
            End Get
        End Property
        
        Friend ReadOnly Property CHUATRAColumn As DataColumn
            Get
                Return Me.columnCHUATRA
            End Get
        End Property
        
        Friend ReadOnly Property TUNGAYColumn As DataColumn
            Get
                Return Me.columnTUNGAY
            End Get
        End Property
        
        Friend ReadOnly Property DENNGAYColumn As DataColumn
            Get
                Return Me.columnDENNGAY
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As BAOCAOTINHHINHGIAIQUYETHOSORow
            Get
                Return CType(Me.Rows(index),BAOCAOTINHHINHGIAIQUYETHOSORow)
            End Get
        End Property
        
        Public Event BAOCAOTINHHINHGIAIQUYETHOSORowChanged As BAOCAOTINHHINHGIAIQUYETHOSORowChangeEventHandler
        
        Public Event BAOCAOTINHHINHGIAIQUYETHOSORowChanging As BAOCAOTINHHINHGIAIQUYETHOSORowChangeEventHandler
        
        Public Event BAOCAOTINHHINHGIAIQUYETHOSORowDeleted As BAOCAOTINHHINHGIAIQUYETHOSORowChangeEventHandler
        
        Public Event BAOCAOTINHHINHGIAIQUYETHOSORowDeleting As BAOCAOTINHHINHGIAIQUYETHOSORowChangeEventHandler
        
        Public Overloads Sub AddBAOCAOTINHHINHGIAIQUYETHOSORow(ByVal row As BAOCAOTINHHINHGIAIQUYETHOSORow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddBAOCAOTINHHINHGIAIQUYETHOSORow(ByVal TENLINHVUC As String, ByVal LOAIHOSO As String, ByVal MALOAIHOSO As String, ByVal TONTRUOC As Integer, ByVal MOINHAN As Integer, ByVal DAHUY As Integer, ByVal DAGQDUNGHAN As Integer, ByVal DAGQQUAHAN As Integer, ByVal CHUAGQQUAHAN As Integer, ByVal CHOBS As Integer, ByVal KHONGGQ As Integer, ByVal DATRADAN As Integer, ByVal CHUATRA As Integer, ByVal TUNGAY As String, ByVal DENNGAY As String) As BAOCAOTINHHINHGIAIQUYETHOSORow
            Dim rowBAOCAOTINHHINHGIAIQUYETHOSORow As BAOCAOTINHHINHGIAIQUYETHOSORow = CType(Me.NewRow,BAOCAOTINHHINHGIAIQUYETHOSORow)
            rowBAOCAOTINHHINHGIAIQUYETHOSORow.ItemArray = New Object() {TENLINHVUC, LOAIHOSO, MALOAIHOSO, TONTRUOC, MOINHAN, DAHUY, DAGQDUNGHAN, DAGQQUAHAN, CHUAGQQUAHAN, CHOBS, KHONGGQ, DATRADAN, CHUATRA, TUNGAY, DENNGAY}
            Me.Rows.Add(rowBAOCAOTINHHINHGIAIQUYETHOSORow)
            Return rowBAOCAOTINHHINHGIAIQUYETHOSORow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As BAOCAOTINHHINHGIAIQUYETHOSODataTable = CType(MyBase.Clone,BAOCAOTINHHINHGIAIQUYETHOSODataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New BAOCAOTINHHINHGIAIQUYETHOSODataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnTENLINHVUC = Me.Columns("TENLINHVUC")
            Me.columnLOAIHOSO = Me.Columns("LOAIHOSO")
            Me.columnMALOAIHOSO = Me.Columns("MALOAIHOSO")
            Me.columnTONTRUOC = Me.Columns("TONTRUOC")
            Me.columnMOINHAN = Me.Columns("MOINHAN")
            Me.columnDAHUY = Me.Columns("DAHUY")
            Me.columnDAGQDUNGHAN = Me.Columns("DAGQDUNGHAN")
            Me.columnDAGQQUAHAN = Me.Columns("DAGQQUAHAN")
            Me.columnCHUAGQQUAHAN = Me.Columns("CHUAGQQUAHAN")
            Me.columnCHOBS = Me.Columns("CHOBS")
            Me.columnKHONGGQ = Me.Columns("KHONGGQ")
            Me.columnDATRADAN = Me.Columns("DATRADAN")
            Me.columnCHUATRA = Me.Columns("CHUATRA")
            Me.columnTUNGAY = Me.Columns("TUNGAY")
            Me.columnDENNGAY = Me.Columns("DENNGAY")
        End Sub
        
        Private Sub InitClass()
            Me.columnTENLINHVUC = New DataColumn("TENLINHVUC", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTENLINHVUC)
            Me.columnLOAIHOSO = New DataColumn("LOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnLOAIHOSO)
            Me.columnMALOAIHOSO = New DataColumn("MALOAIHOSO", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMALOAIHOSO)
            Me.columnTONTRUOC = New DataColumn("TONTRUOC", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTONTRUOC)
            Me.columnMOINHAN = New DataColumn("MOINHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnMOINHAN)
            Me.columnDAHUY = New DataColumn("DAHUY", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAHUY)
            Me.columnDAGQDUNGHAN = New DataColumn("DAGQDUNGHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAGQDUNGHAN)
            Me.columnDAGQQUAHAN = New DataColumn("DAGQQUAHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDAGQQUAHAN)
            Me.columnCHUAGQQUAHAN = New DataColumn("CHUAGQQUAHAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUAGQQUAHAN)
            Me.columnCHOBS = New DataColumn("CHOBS", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHOBS)
            Me.columnKHONGGQ = New DataColumn("KHONGGQ", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnKHONGGQ)
            Me.columnDATRADAN = New DataColumn("DATRADAN", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDATRADAN)
            Me.columnCHUATRA = New DataColumn("CHUATRA", GetType(System.Int32), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCHUATRA)
            Me.columnTUNGAY = New DataColumn("TUNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnTUNGAY)
            Me.columnDENNGAY = New DataColumn("DENNGAY", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDENNGAY)
            Me.columnTENLINHVUC.AllowDBNull = false
            Me.columnLOAIHOSO.AllowDBNull = false
            Me.columnMALOAIHOSO.AllowDBNull = false
            Me.columnTONTRUOC.AllowDBNull = false
            Me.columnMOINHAN.AllowDBNull = false
            Me.columnDAHUY.AllowDBNull = false
            Me.columnDAGQDUNGHAN.AllowDBNull = false
            Me.columnDAGQQUAHAN.AllowDBNull = false
            Me.columnCHUAGQQUAHAN.AllowDBNull = false
            Me.columnCHOBS.AllowDBNull = false
            Me.columnKHONGGQ.AllowDBNull = false
            Me.columnDATRADAN.AllowDBNull = false
            Me.columnCHUATRA.AllowDBNull = false
            Me.columnTUNGAY.AllowDBNull = false
            Me.columnDENNGAY.AllowDBNull = false
        End Sub
        
        Public Function NewBAOCAOTINHHINHGIAIQUYETHOSORow() As BAOCAOTINHHINHGIAIQUYETHOSORow
            Return CType(Me.NewRow,BAOCAOTINHHINHGIAIQUYETHOSORow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New BAOCAOTINHHINHGIAIQUYETHOSORow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(BAOCAOTINHHINHGIAIQUYETHOSORow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BAOCAOTINHHINHGIAIQUYETHOSORowChangedEvent) Is Nothing) Then
                RaiseEvent BAOCAOTINHHINHGIAIQUYETHOSORowChanged(Me, New BAOCAOTINHHINHGIAIQUYETHOSORowChangeEvent(CType(e.Row,BAOCAOTINHHINHGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BAOCAOTINHHINHGIAIQUYETHOSORowChangingEvent) Is Nothing) Then
                RaiseEvent BAOCAOTINHHINHGIAIQUYETHOSORowChanging(Me, New BAOCAOTINHHINHGIAIQUYETHOSORowChangeEvent(CType(e.Row,BAOCAOTINHHINHGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BAOCAOTINHHINHGIAIQUYETHOSORowDeletedEvent) Is Nothing) Then
                RaiseEvent BAOCAOTINHHINHGIAIQUYETHOSORowDeleted(Me, New BAOCAOTINHHINHGIAIQUYETHOSORowChangeEvent(CType(e.Row,BAOCAOTINHHINHGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BAOCAOTINHHINHGIAIQUYETHOSORowDeletingEvent) Is Nothing) Then
                RaiseEvent BAOCAOTINHHINHGIAIQUYETHOSORowDeleting(Me, New BAOCAOTINHHINHGIAIQUYETHOSORowChangeEvent(CType(e.Row,BAOCAOTINHHINHGIAIQUYETHOSORow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveBAOCAOTINHHINHGIAIQUYETHOSORow(ByVal row As BAOCAOTINHHINHGIAIQUYETHOSORow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class BAOCAOTINHHINHGIAIQUYETHOSORow
        Inherits DataRow
        
        Private tableBAOCAOTINHHINHGIAIQUYETHOSO As BAOCAOTINHHINHGIAIQUYETHOSODataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableBAOCAOTINHHINHGIAIQUYETHOSO = CType(Me.Table,BAOCAOTINHHINHGIAIQUYETHOSODataTable)
        End Sub
        
        Public Property TENLINHVUC As String
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.TENLINHVUCColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.TENLINHVUCColumn) = value
            End Set
        End Property
        
        Public Property LOAIHOSO As String
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.LOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.LOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property MALOAIHOSO As String
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.MALOAIHOSOColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.MALOAIHOSOColumn) = value
            End Set
        End Property
        
        Public Property TONTRUOC As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.TONTRUOCColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.TONTRUOCColumn) = value
            End Set
        End Property
        
        Public Property MOINHAN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.MOINHANColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.MOINHANColumn) = value
            End Set
        End Property
        
        Public Property DAHUY As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DAHUYColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DAHUYColumn) = value
            End Set
        End Property
        
        Public Property DAGQDUNGHAN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DAGQDUNGHANColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DAGQDUNGHANColumn) = value
            End Set
        End Property
        
        Public Property DAGQQUAHAN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DAGQQUAHANColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DAGQQUAHANColumn) = value
            End Set
        End Property
        
        Public Property CHUAGQQUAHAN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.CHUAGQQUAHANColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.CHUAGQQUAHANColumn) = value
            End Set
        End Property
        
        Public Property CHOBS As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.CHOBSColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.CHOBSColumn) = value
            End Set
        End Property
        
        Public Property KHONGGQ As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.KHONGGQColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.KHONGGQColumn) = value
            End Set
        End Property
        
        Public Property DATRADAN As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DATRADANColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DATRADANColumn) = value
            End Set
        End Property
        
        Public Property CHUATRA As Integer
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.CHUATRAColumn),Integer)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.CHUATRAColumn) = value
            End Set
        End Property
        
        Public Property TUNGAY As String
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.TUNGAYColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.TUNGAYColumn) = value
            End Set
        End Property
        
        Public Property DENNGAY As String
            Get
                Return CType(Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DENNGAYColumn),String)
            End Get
            Set
                Me(Me.tableBAOCAOTINHHINHGIAIQUYETHOSO.DENNGAYColumn) = value
            End Set
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class BAOCAOTINHHINHGIAIQUYETHOSORowChangeEvent
        Inherits EventArgs
        
        Private eventRow As BAOCAOTINHHINHGIAIQUYETHOSORow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As BAOCAOTINHHINHGIAIQUYETHOSORow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As BAOCAOTINHHINHGIAIQUYETHOSORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
